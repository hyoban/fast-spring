{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6b22\u8fce \u8fd9\u91cc\u662f\u6211\u5c1d\u8bd5\u5199\u7684\u5173\u4e8e Spring \u7684\u6559\u7a0b\u3002 \u7531\u4e8e\u975e\u5e38\u4e2d\u610f FastAPI \u7684\u4f7f\u7528\u4f53\u9a8c\uff0c\u6240\u4ee5\u6211\u5c1d\u8bd5\u5728 Spring \u4e0a\u590d\u523b\u5b83\u3002 \u5982\u4f60\u6240\u89c1\uff0c\u8fd9\u4efd\u6559\u7a0b\u4e5f\u662f\u540c\u6837\u4f7f\u7528 MkDocs \u6784\u5efa\u7684\u3002 \u5728\u672c\u7ae0\u8282\u4e2d\uff0c\u5c06\u4ece\u5982\u4f55\u590d\u523b FastAPI \u7684\u57fa\u7840\u5f00\u53d1\u4f53\u9a8c\u8bb2\u8d77\uff0c\u540e\u7eed\u7684\u6587\u7ae0\u5c06\u4ecb\u7ecd Spring \u4e2d FastAPI \u7684\u5bf9\u5e94\u5199\u6cd5\u3002 \u672c\u7ae0\u8282\u6700\u540e\u7684\u90e8\u5206\uff0c\u6211\u5c06\u7ed9\u51fa\u521d\u59cb\u5316 Spring \u9879\u76ee\u7684\u6a21\u677f\u3002\u6240\u4ee5\u4f60\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8be5\u6a21\u677f\u6765\u5f80\u540e\u9605\u8bfb\u3002 \u9605\u8bfb\u5b8c\u672c\u6559\u7a0b\u4e4b\u540e\uff0c\u4f60\u5c06\u4f1a\u5177\u6709\u57fa\u7840\u7684 web \u5f00\u53d1\u80fd\u529b\u3002 \u521d\u59cb\u5316\u9879\u76ee \u4f60\u53ef\u4ee5\u4f7f\u7528 Spring initializr \u6765\u521d\u59cb\u5316\u4e00\u4e2a Spring \u7684\u9879\u76ee\u3002 \u6211\u4e3a\u4f60\u9ed8\u8ba4\u6dfb\u52a0\u4e86\u5982\u4e0b\u4f9d\u8d56\uff1a Lombok \u5982\u679c\u4f60\u5e0c\u671b\u624b\u52a8\u521b\u5efa getter setter \u7b49\u65b9\u6cd5\u53ef\u4ee5\u53bb\u9664\u5b83\u3002 Spring Boot DevTools \u5b83\u53ef\u4ee5\u8ba9\u6211\u4eec\u5728\u4fee\u6539\u5b8c\u4ee3\u7801\u4e4b\u540e\u4e0d\u5fc5\u5b8c\u5168\u91cd\u542f\u7a0b\u5e8f\u3002 Spring Web \u6559\u7a0b\u4ecb\u7ecd\u7684\u91cd\u5934\u620f\u3002 DevTools \u81ea\u52a8\u91cd\u542f\u539f\u7406 Spring Boot DevTools \u4e0e\u4f60\u7684\u7f16\u8f91\u5668\u65e0\u5173\u3002\u5e76\u4e14\u5b83\u80fd\u8bc6\u522b\u7a0b\u5e8f\u7684\u8fd0\u884c\u73af\u5883\uff0c\u5982\u679c\u662f\u751f\u4ea7\u73af\u5883\u5219\u4f1a\u81ea\u52a8\u7981\u7528\u3002 \u5b83\u5c06\u7a0b\u5e8f\u52a0\u8f7d\u5230 JVM \u4e0a\u4e24\u4e2a\u72ec\u7acb\u7684 class loader\uff0c\u4e00\u4e2a\u7528\u4e8e\u52a0\u8f7d\u6211\u4eec\u7684\u4ee3\u7801\u548c\u914d\u7f6e\u6587\u4ef6\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e\u52a0\u8f7d\u6211\u4eec\u7684\u4f9d\u8d56\u5e93\u3002 \u524d\u8005\u6613\u4e8e\u6539\u53d8\uff0c\u800c\u540e\u8005\u57fa\u672c\u4fdd\u6301\u4e0d\u53d8\u3002 \u5f53\u89e6\u53d1\u6539\u53d8\u65f6\uff0c\u5305\u542b\u6211\u4eec\u4ee3\u7801\u7684 class loader \u548c spring application context \u4f1a\u91cd\u542f\uff0c \u4f46\u662f JVM \u5b9e\u4f8b\u548c\u53e6\u4e00\u4e2a class loader \u4f1a\u4fdd\u6301\u4e0d\u53d8\u3002 \u6240\u4ee5\u5f53\u6211\u4eec\u4fee\u6539 pom.xml \u6587\u4ef6\u7684\u4f9d\u8d56\u9879\u540e\uff0c\u9700\u8981\u624b\u52a8\u91cd\u542f\u7a0b\u5e8f\u3002 \u5728 IDEA \u4e2d\uff0c\u89e6\u53d1\u91cd\u542f\u7684\u65b9\u5f0f\u662f Build \u9879\u76ee\uff0c\u8fd9\u6837\u80fd\u66f4\u65b0\u7c7b\u8def\u5f84\u3002 \u521b\u5efa\u914d\u7f6e\u6587\u4ef6 \u4fee\u6539 Spring Boot \u7684\u914d\u7f6e\u6587\u4ef6\u683c\u5f0f\u4e3a yml\uff0c\u7136\u540e\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a server : port : 8888 # \u4fee\u6539\u9ed8\u8ba4\u7aef\u53e3\uff0c\u9632\u6b62\u51b2\u7a81 \u81ea\u52a8\u751f\u6210\u6587\u6863 \u8bf7\u5728\u4f60\u7684\u9879\u76ee\u6dfb\u52a0 springdoc-openapi-ui \u7684\u4f9d\u8d56\uff0c\u5b83\u80fd\u591f\u5e2e\u6211\u4eec\u81ea\u52a8\u751f\u6210\u53ef\u4ea4\u4e92\u7684 API \u6587\u6863\u3002 \u7136\u540e\u6dfb\u52a0\u914d\u7f6e\u6587\u4ef6\uff1a springdoc : swagger-ui : path : /docs # \u4f7f\u7528\u548c FastAPI \u4e00\u81f4\u7684\u6587\u6863\u94fe\u63a5 show-extensions : true # \u652f\u6301\u6821\u9a8c\u76f8\u5173\u7684\u6ce8\u89e3 show-common-extensions : true \u8865\u5145\u6587\u6863\u7684\u4e00\u4e9b\u76f8\u5173\u4fe1\u606f\uff0c\u8bf7\u5c06\u5982\u4e0b\u4ee3\u7801\u6dfb\u52a0\u5230\u67d0\u4e2a\u88ab\u6807\u8bb0\u4e86 @Configuration \u6ce8\u89e3\u7684\u7c7b\u4e0b\u3002 \u66f4\u591a\u53ef\u8865\u5145\u7684\u4fe1\u606f\u8bf7\u53c2\u8003\u6587\u6863\u3002 @Bean public OpenAPI openAPI () { Info info = new Info () . title ( \"Spring doc\" ) . version ( \"0.1.0\" ); return new OpenAPI (). info ( info ); } \u9879\u76ee\u542f\u52a8\u540e\u8bbf\u95ee http://localhost:8888/docs \u5730\u5740\u5373\u53ef\u770b\u5230\u751f\u6210\u7684\u6587\u6863\u3002 \u4f60\u53ef\u4ee5\u67e5\u9605 \u65b0\u624b\u5de5\u7a0b\u5e2b\u7684\u7a0b\u5f0f\u6559\u5ba4 \u7684\u4e00\u7bc7 \u76f8\u5173\u6559\u7a0b \u6765\u4e86\u89e3\u57fa\u7840\u7528\u6cd5\u3002 \u652f\u6301 JSR-303 \u5728 swagger \u6587\u6863\u4e2d\uff0c\u6821\u9a8c bean \u7684\u6ce8\u89e3\u5f97\u5230\u4e86\u652f\u6301\u3002 \u5982\u679c\u6211\u4eec\u8f93\u5165\u4e86\u4e0d\u7b26\u5408\u8981\u6c42\u7684\u53c2\u6570\uff0c\u5b83\u4f1a\u5f39\u6846\u63d0\u793a\uff0c\u800c\u975e\u663e\u793a\u670d\u52a1\u5668\u8fd4\u56de\u7684\u9519\u8bef\u4fe1\u606f\u3002 \u800c\u5982\u679c\u5e0c\u671b\u663e\u793a\u8fd9\u4e9b\u6821\u9a8c\u6ce8\u89e3\u7684\u4fe1\u606f\uff0c\u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u5f00\u542f\u63d2\u4ef6\u3002 \u4f60\u53ef\u4ee5\u53c2\u8003\u4f5c\u8005\u5728 Issues \u4e2d\u7684\u56de\u590d \u53c2\u6570\u6821\u9a8c \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cSpring \u5e76\u4e0d\u4f1a\u5e2e\u6211\u4eec\u5bf9 controller \u4e2d\u83b7\u53d6\u5230\u7684\u8bf7\u6c42\u53c2\u6570\u8fdb\u884c\u6821\u9a8c\uff0c\u9700\u8981\u901a\u8fc7\u6ce8\u89e3\u624b\u52a8\u914d\u7f6e\u3002 \u4f60\u53ef\u4ee5\u9605\u8bfb \u4f7f\u7528 Spring Validation \u4f18\u96c5\u5730\u6821\u9a8c\u53c2\u6570 \u6765\u4e86\u89e3\u6821\u9a8c\u76f8\u5173\u64cd\u4f5c\u7684\u8be6\u60c5\u3002 \u66f4\u591a\u6821\u9a8c\u76f8\u5173\u53ef\u7528\u7684\u6ce8\u89e3\u53ef\u4ee5\u67e5\u770b javax.validation.constraints \u5305\u4e0b\u7684\u5185\u5bb9\uff0c \u4f60\u53ea\u9700\u8981\u5728\u4ee3\u7801\u5bfc\u5165\u90e8\u5206\uff0c\u70b9\u51fb constraints \u4f4d\u7f6e\u8df3\u8f6c\u5373\u53ef\u5b9a\u4f4d\u3002 \u5982\u679c\u6709\u5199\u7684\u5f88\u5b8c\u5584\u7684\u6587\u7ae0\uff0c\u672c\u6559\u7a0b\u4e0d\u4f1a\u989d\u5916\u9020\u8f6e\u5b50\uff0c\u53ea\u662f\u7ed9\u51fa\u539f\u6587\u94fe\u63a5\u3002 \u672c\u6559\u7a0b\u5c06\u4e0d\u4f1a\u5728\u540e\u9762\u4ecb\u7ecd\u6821\u9a8c\u76f8\u5173\u7684\u5185\u5bb9\uff0cSpring \u7684\u6ce8\u89e3\u53c2\u6570\u6821\u9a8c\u6bd4 FastAPI \u9ad8\u5230\u4e0d\u77e5\u9053\u54ea\u91cc\u53bb\u4e86\u3002 \u7edf\u4e00\u8fd4\u56de\u7ed3\u679c \u8bf7\u9605\u8bfb SpringBoot \u5982\u4f55\u7edf\u4e00\u540e\u7aef\u8fd4\u56de\u683c\u5f0f\uff1f\u8001\u9e1f\u4eec\u90fd\u662f\u8fd9\u6837\u73a9\u7684\uff01 \uff0c\u7136\u540e\u7ed3\u5408\u524d\u4e00\u8282\u7684\u5f02\u5e38\u5904\u7406\u3002 \u9700\u8981\u6ce8\u610f\uff0c\u4f7f\u7528 @RestControllerAdvice \u6765\u7edf\u4e00\u8fd4\u56de\u7ed3\u679c\u4e4b\u540e\uff0c\u4f1a\u5f71\u54cd\u5230 swagger \u6587\u6863\u7684\u8bbf\u95ee\u3002 \u4f60\u9700\u8981\u8bbe\u7f6e basePackages \u5c5e\u6027\uff0c\u9650\u5b9a\u53ea\u626b\u63cf\u81ea\u5df1\u4ee3\u7801\u7684\u5305\u3002 \u4f9d\u8d56\u6ce8\u5165 \u5173\u4e8e\u6b64\u90e8\u5206\uff0cSpring \u672c\u8eab\u5c31\u5df2\u7ecf\u505a\u7684\u5f88\u597d\u4e86\u3002\u6211\u4eec\u5c06\u5728\u540e\u7eed\u7684\u7ae0\u8282\u4e2d\u5c55\u5f00\u4ecb\u7ecd\u3002 \u524d\u7f6e\u6982\u5ff5 container / spring application context \u7528\u4e8e\u521b\u5efa\u548c\u7ba1\u7406\u5e94\u7528\u7ec4\u4ef6 \u5728\u5bb9\u5668\u57fa\u7840\u4e0a spring \u548c\u4e00\u4e9b\u5176\u4ed6\u7684\u5e93\u63d0\u4f9b\u4e86\u5404\u79cd\u73b0\u4ee3\u7a0b\u5e8f\u5f00\u53d1\u6240\u9700\u8981\u7684\u529f\u80fd components / beans \u88ab\u7ec4\u88c5\u5230\u4e00\u8d77\u6765\u6784\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u5e94\u7528\u7a0b\u5e8f xml configuration java-based configuration class @Configuration \u544a\u8bc9 spring \u8fd9\u4e2a\u7c7b\u662f\u7528\u4e8e\u63d0\u4f9b\u7ec4\u4ef6\u5230\u5bb9\u5668 @Bean \u6807\u8bb0\u65b9\u6cd5\uff0c\u8868\u793a\u8be5\u65b9\u6cd5\u8fd4\u56de\u7684\u7c7b\u5e94\u8be5\u4f5c\u4e3a\u7ec4\u4ef6\u88ab\u6dfb\u52a0\u5230\u5bb9\u5668 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cbean \u7684 id \u548c\u65b9\u6cd5\u540d\u76f8\u540c \u76f8\u6bd4 xml \u7684\u914d\u7f6e\u65b9\u5f0f\uff0c\u6ce8\u89e3\u7684\u65b9\u5f0f\u6709\u7740\u66f4\u597d\u7684\u7c7b\u578b\u5b89\u5168\u548c\u53ef\u91cd\u6784\u6027 \u5927\u90e8\u5206\u65f6\u95f4\u4e0d\u9700\u8981\u624b\u52a8\u6765\u77e5\u540d\u914d\u7f6e\uff0csping \u53ef\u4ee5\u81ea\u52a8\u914d\u7f6e dependency injection \u7531\u5bb9\u5668\u6765\u521b\u5efa\u548c\u7ef4\u62a4\u6240\u6709\u7684\u7ec4\u4ef6\uff0c\u7136\u540e\u5c06\u7ec4\u4ef6\u6ce8\u5165\u5230\u9700\u8981\u5b83\u4eec\u7684\u5730\u65b9 constructor argyments property accessor methods automatic configuration component scanning \u4ece\u5e94\u7528\u7684 classpath \u81ea\u52a8\u53d1\u73b0\u7ec4\u4ef6\u5e76\u521b\u5efa\u5230\u5bb9\u5668 autowiring \u81ea\u52a8\u6ce8\u5165\u7ec4\u4ef6\u5230\u5176\u4ed6\u9700\u8981\u5b83\u7684\u7ec4\u4ef6\u7684\u4f4d\u7f6e spring boot \u6839\u636e\u4f60\u7684 classpath\uff0c\u73af\u5883\u53d8\u91cf\uff0c\u548c\u5176\u4ed6\u56e0\u7d20\u6765\u8fdb\u884c\u81ea\u52a8\u7684\u914d\u7f6e\u548c\u7ec4\u88c5 \u5927\u91cf\u51cf\u5c11\u4e86\u663e\u793a\u7684\u914d\u7f6e\uff0c\u4e0d\u7ba1\u662f xml \u8fd8\u662f java \u6ce8\u89e3 \u5c3d\u53ef\u80fd\u7684\u4f7f\u7528\u81ea\u52a8\u914d\u7f6e\uff0c\u5e76\u4e14\u629b\u5f03 xml \u7684\u914d\u7f6e\u65b9\u5f0f \u6587\u4ef6\u7ed3\u6784 \u5178\u578b\u7684 maven \u6216\u8005 gradle \u9879\u76ee\uff0c\u5305\u542b\u6e90\u7801\uff0c\u6d4b\u8bd5\u4ee3\u7801\uff0c\u548c\u8d44\u6e90\u76ee\u5f55 maven \u76f8\u5173 mvnw \u548c mvnw.cmd \u662f maven wrapper \u7684\u811a\u672c\uff0c\u53ef\u4ee5\u8ba9\u4f60\u65e0\u9700\u63d0\u524d\u5b89\u88c5 maven pom.xml maven \u6784\u5efa\u7684\u5177\u4f53\u7ec6\u8282 <parent> \u5b9a\u4e49\u4f9d\u8d56\u7684\u7236 pom \u6587\u4ef6\uff0c\u901a\u8fc7\u6307\u5b9a spring-boot-starter-parent \u7684\u7248\u672c\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u4ed6\u76f8\u5173\u4f9d\u8d56\u7684\u7248\u672c\u4ea4\u7531\u5b83\u6765\u786e\u5b9a <dependencies> \u5b9a\u4e49\u6211\u4eec\u9700\u8981\u4f7f\u7528\u7684\u4f9d\u8d56 starter \u7ed3\u5c3e\u7684\u4f9d\u8d56\u9879 id\uff0c\u8868\u660e\u5b83\u672c\u8eab\u4e0d\u5305\u542b\u5b9e\u9645\u7684\u4ee3\u7801\uff0c\u53ea\u662f\u7ec4\u5408\u5176\u4ed6\u7684\u5e93 \u4f60\u7684\u4f9d\u8d56\u9879\u4f1a\u51cf\u5c11\u5f88\u591a \u8bed\u4e49\u5316\u7684\u786e\u5b9a\u4f9d\u8d56\u80fd\u7ed9\u6211\u4eec\u5e26\u6765\u7684\u529f\u80fd \u4f60\u4e0d\u5fc5\u624b\u52a8\u53bb\u6307\u5b9a\u5404\u4e2a\u4f9d\u8d56\u7684\u7248\u672c\uff0cspring boot \u4f1a\u5e2e\u4f60\u786e\u5b9a\u5404\u4e2a\u5408\u9002\u7684\u7248\u672c <plugins> \u6784\u5efa\u7684\u63d2\u4ef6\uff0cspring boot \u63d2\u4ef6\u63d0\u4f9b\u4e86\u5f88\u591a\u529f\u80fd \u4f7f\u7528 maven \u6765\u542f\u52a8\u7a0b\u5e8f \u786e\u4fdd\u6240\u6709\u7684\u4f9d\u8d56\u5e93\u4f1a\u88ab\u6253\u5305\u5230 JAR \u6587\u4ef6\uff0c\u4ee5\u53ca\u5728\u8fd0\u884c\u65f6\u5904\u4e8e classpath \u4e0b \u5728 manifest \u6587\u4ef6\u4e2d\u6307\u5b9a\u4e86\u9879\u76ee\u542f\u52a8\u7684\u4e3b\u7c7b spring \u76f8\u5173 application.properties \u6307\u5b9a\u9879\u76ee\u914d\u7f6e static templates \u7a0b\u5e8f\u542f\u52a8 @SpringBootApplication @SpringBootConfiguration \u4e00\u4e2a\u7279\u5b9a\u5f62\u5f0f\u7684 @Configuration \u6ce8\u89e3 \u4f60\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e24\u4e2a\u7b80\u5355\u7684\u914d\u7f6e\u5230\u542f\u52a8\u7c7b\u4e0b \u521b\u5efa\u66f4\u591a\u7684\u914d\u7f6e\u7c7b\u6765\u63d0\u4f9b\u66f4\u591a\u7684\u4e0d\u80fd\u81ea\u52a8\u914d\u7f6e\u7684\u7684\u4e1c\u897f @EnableAutoConfiguration \u542f\u7528 spring boot \u7684\u81ea\u52a8\u914d\u7f6e\u529f\u80fd @ComponentScan \u542f\u52a8\u7ec4\u4ef6\u626b\u63cf\uff0c\u8fd9\u4f7f\u5f97 spring \u80fd\u591f\u81ea\u52a8\u53d1\u73b0\u88ab\u6807\u8bb0\u4e3a\u7ec4\u4ef6\u7684\u7c7b\uff0c\u5e76\u4e14\u6ce8\u518c\u5230\u5bb9\u5668 main() \u5728 JAR \u6587\u4ef6\u88ab\u6267\u884c\u65f6\u8fd0\u884c\u6b64\u65b9\u6cd5\uff0c\u6837\u677f\u4ee3\u7801 run() \u6307\u5b9a\u771f\u6b63\u7684\u7ec4\u88c5\u7a0b\u5e8f\u7684\u4ee3\u7801\uff0c\u521b\u5efa spring application context \u4f20\u5165\u7684\u914d\u7f6e\u7c7b\u53c2\u6570\u4e0d\u5fc5\u548c\u542f\u52a8\u7c7b\u76f8\u540c\uff0c\u4f46\u8fd9\u662f\u6700\u5e38\u89c1\u548c\u65b9\u4fbf\u7684\u9009\u62e9 \u4f20\u5165\u547d\u4ee4\u884c\u53c2\u6570\u5230\u8be5\u65b9\u6cd5 \u7a0b\u5e8f\u6d4b\u8bd5 \u76f4\u63a5\u6253\u5305\u8fd0\u884c\u6765\u6d4b\u8bd5 ./mvnw package java -jar target/taco-cloud-0.0.1-SNAPSHOT.jar ./mvnw spring-boot:run \u7f16\u5199\u6d4b\u8bd5\u4ee3\u7801 \u5373\u4f7f\u6d4b\u8bd5\u4ee3\u7801\u4e3a\u7a7a\uff0c\u6211\u4eec\u4e5f\u80fd\u901a\u8fc7\u8fd0\u884c\u6d4b\u8bd5\u4ee3\u7801\u6765\u5224\u65ad\u7a0b\u5e8f\u662f\u5426\u80fd\u591f\u4e89\u53d6\u6267\u884c @SpringBootTest \u544a\u8bc9 JUnit \u6765\u4f7f\u7528 spring boot \u7684\u80fd\u529b\u6765\u521d\u59cb\u5316\u6d4b\u8bd5 @ExtendWith(SpringExtension.class) \u6dfb\u52a0 spring \u6d4b\u8bd5\u7684\u80fd\u529b\u5230 JUnit 5 \u53ef\u4ee5\u7406\u89e3\u4e3a\u6267\u884c\u4e86 SpringApplication.run() ./mvnw test \u6784\u5efa\u548c\u8fd0\u884c\u7a0b\u5e8f Tomcat \u662f spring boot \u7a0b\u5e8f\u7684\u4e00\u90e8\u5206\uff0c\u800c\u65e0\u9700\u5c06\u4ee3\u7801\u90e8\u7f72\u5230 Tomcat spring boot \u7684\u81ea\u52a8\u914d\u7f6e\u5e93\uff0c\u76d1\u6d4b\u5230\u6211\u4eec\u4f7f\u7528\u7684\u4f9d\u8d56\u9879\uff0c\u7136\u540e\u4f7f\u5f97 spring application context \u6765\u542f\u7528\u548c\u914d\u7f6e\u5bf9\u5e94\u7684\u529f\u80fd Spring Boot DevTools \u4e0d\u662f\u4e00\u4e2a IDE \u5de5\u5177 \u5f00\u53d1\u65f6\u542f\u7528\uff0c\u751f\u4ea7\u73af\u5883\u4e0b\u81ea\u52a8\u7981\u7528 \u81ea\u52a8\u7981\u7528\u6a21\u677f\u7f13\u5b58 \u6a21\u677f\u6587\u4ef6\u9ed8\u8ba4\u4f1a\u88ab\u7a0b\u5e8f\u7f13\u5b58\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u4fee\u6539\u6a21\u677f\u6587\u4ef6\u65e0\u6cd5\u5728\u6d4f\u89c8\u5668\u4e2d\u7684\u5230\u66f4\u65b0 \u5982\u679c\u4f60\u5e0c\u671b\u53d8\u5316\u65f6\u81ea\u52a8\u5237\u65b0\u6d4f\u89c8\u5668\uff0c\u5c31\u9700\u8981\u989d\u5916\u5b89\u88c5\u6d4f\u89c8\u5668\u63d2\u4ef6 h2 \u6570\u636e\u5e93\u7ec8\u7aef http://localhost:8080/h2-console \u597d\u50cf\u6ca1\u5565\u7528\uff0cIDEA \u7684\u529f\u80fd\u66f4\u5f3a spring \u751f\u6001\u4ecb\u7ecd core spring spring \u5b87\u5b99\u7684\u57fa\u7840\uff0c\u63d0\u4f9b container \u548c di \u7684\u6846\u67b6 spring MVC\uff0cREST APIs \u57fa\u7840\u7684\u6570\u636e\u5e93\u652f\u6301 JdbcTemplate reactive program, Spring WebFlux Spring Boot starter dependencies\uff0c\u4f9d\u8d56\u7ba1\u7406 autoconfiguration Actuator \u76d1\u63a7\u8fd0\u884c\u65f6\u7a0b\u5e8f\u7684\u5185\u90e8\u72b6\u6001 \u7075\u6d3b\u5730\u6307\u5b9a\u73af\u5883\u914d\u7f6e \u5728\u6838\u578b\u5e93\u4e0a\u989d\u5916\u7684\u6d4b\u8bd5\u652f\u6301 Spring boot cli \u4f7f\u7528 groovy \u811a\u672c\u6765\u7f16\u5199\u7a0b\u5e8f Spring Data \u4f7f\u7528 Java \u63a5\u53e3\u6765\u5b9a\u4e49\u6570\u636e\u6a21\u578b \u4f7f\u7528\u8bed\u4e49\u5316\u7684\u51fd\u6570\u6765\u8fdb\u884c CRUD \u7684\u64cd\u4f5c \u652f\u6301\u5305\u62ec\u5173\u7cfb\u578b\uff0c\u6587\u6863\u578b\uff0cgraph \u7b49\u7c7b\u578b\u7684\u6570\u636e\u5e93 Spring Security \u9274\u522b\uff0c\u9274\u6743\uff0cAPI \u5b89\u5168 Spring Integration \u548c Spring Batch \u6574\u5408\u5176\u4ed6\u7a0b\u5e8f \u524d\u8005\u5904\u7406\u5b9e\u65f6\u7684\u6574\u5408\uff0c\u540e\u8005\u6309\u7167\u6279\u6b21\u548c\u89e6\u53d1\u5668\u6765\u8fdb\u884c\u6574\u5408\u5904\u7406 Spring Cloud \u5fae\u670d\u52a1\uff0c\u5373\u7ec4\u5408\u591a\u4e2a\u5355\u72ec\u90e8\u7f72\u7684\u7a0b\u5e8f Cloud Native Spring in Action Spring Native \u5c06 Spring Boot \u9879\u76ee\u7f16\u8bd1\u7a0b\u5e8f\u53ef\u6267\u884c\u6587\u4ef6 GraalVM native-image compiler \u975e\u5e38\u5feb\u7684\u542f\u52a8\u548c\u5f88\u5c0f\u7684\u5360\u7528\u7a7a\u95f4","title":"\u6b22\u8fce"},{"location":"#_1","text":"\u8fd9\u91cc\u662f\u6211\u5c1d\u8bd5\u5199\u7684\u5173\u4e8e Spring \u7684\u6559\u7a0b\u3002 \u7531\u4e8e\u975e\u5e38\u4e2d\u610f FastAPI \u7684\u4f7f\u7528\u4f53\u9a8c\uff0c\u6240\u4ee5\u6211\u5c1d\u8bd5\u5728 Spring \u4e0a\u590d\u523b\u5b83\u3002 \u5982\u4f60\u6240\u89c1\uff0c\u8fd9\u4efd\u6559\u7a0b\u4e5f\u662f\u540c\u6837\u4f7f\u7528 MkDocs \u6784\u5efa\u7684\u3002 \u5728\u672c\u7ae0\u8282\u4e2d\uff0c\u5c06\u4ece\u5982\u4f55\u590d\u523b FastAPI \u7684\u57fa\u7840\u5f00\u53d1\u4f53\u9a8c\u8bb2\u8d77\uff0c\u540e\u7eed\u7684\u6587\u7ae0\u5c06\u4ecb\u7ecd Spring \u4e2d FastAPI \u7684\u5bf9\u5e94\u5199\u6cd5\u3002 \u672c\u7ae0\u8282\u6700\u540e\u7684\u90e8\u5206\uff0c\u6211\u5c06\u7ed9\u51fa\u521d\u59cb\u5316 Spring \u9879\u76ee\u7684\u6a21\u677f\u3002\u6240\u4ee5\u4f60\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8be5\u6a21\u677f\u6765\u5f80\u540e\u9605\u8bfb\u3002 \u9605\u8bfb\u5b8c\u672c\u6559\u7a0b\u4e4b\u540e\uff0c\u4f60\u5c06\u4f1a\u5177\u6709\u57fa\u7840\u7684 web \u5f00\u53d1\u80fd\u529b\u3002","title":"\u6b22\u8fce"},{"location":"#_2","text":"\u4f60\u53ef\u4ee5\u4f7f\u7528 Spring initializr \u6765\u521d\u59cb\u5316\u4e00\u4e2a Spring \u7684\u9879\u76ee\u3002 \u6211\u4e3a\u4f60\u9ed8\u8ba4\u6dfb\u52a0\u4e86\u5982\u4e0b\u4f9d\u8d56\uff1a Lombok \u5982\u679c\u4f60\u5e0c\u671b\u624b\u52a8\u521b\u5efa getter setter \u7b49\u65b9\u6cd5\u53ef\u4ee5\u53bb\u9664\u5b83\u3002 Spring Boot DevTools \u5b83\u53ef\u4ee5\u8ba9\u6211\u4eec\u5728\u4fee\u6539\u5b8c\u4ee3\u7801\u4e4b\u540e\u4e0d\u5fc5\u5b8c\u5168\u91cd\u542f\u7a0b\u5e8f\u3002 Spring Web \u6559\u7a0b\u4ecb\u7ecd\u7684\u91cd\u5934\u620f\u3002","title":"\u521d\u59cb\u5316\u9879\u76ee"},{"location":"#devtools","text":"Spring Boot DevTools \u4e0e\u4f60\u7684\u7f16\u8f91\u5668\u65e0\u5173\u3002\u5e76\u4e14\u5b83\u80fd\u8bc6\u522b\u7a0b\u5e8f\u7684\u8fd0\u884c\u73af\u5883\uff0c\u5982\u679c\u662f\u751f\u4ea7\u73af\u5883\u5219\u4f1a\u81ea\u52a8\u7981\u7528\u3002 \u5b83\u5c06\u7a0b\u5e8f\u52a0\u8f7d\u5230 JVM \u4e0a\u4e24\u4e2a\u72ec\u7acb\u7684 class loader\uff0c\u4e00\u4e2a\u7528\u4e8e\u52a0\u8f7d\u6211\u4eec\u7684\u4ee3\u7801\u548c\u914d\u7f6e\u6587\u4ef6\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e\u52a0\u8f7d\u6211\u4eec\u7684\u4f9d\u8d56\u5e93\u3002 \u524d\u8005\u6613\u4e8e\u6539\u53d8\uff0c\u800c\u540e\u8005\u57fa\u672c\u4fdd\u6301\u4e0d\u53d8\u3002 \u5f53\u89e6\u53d1\u6539\u53d8\u65f6\uff0c\u5305\u542b\u6211\u4eec\u4ee3\u7801\u7684 class loader \u548c spring application context \u4f1a\u91cd\u542f\uff0c \u4f46\u662f JVM \u5b9e\u4f8b\u548c\u53e6\u4e00\u4e2a class loader \u4f1a\u4fdd\u6301\u4e0d\u53d8\u3002 \u6240\u4ee5\u5f53\u6211\u4eec\u4fee\u6539 pom.xml \u6587\u4ef6\u7684\u4f9d\u8d56\u9879\u540e\uff0c\u9700\u8981\u624b\u52a8\u91cd\u542f\u7a0b\u5e8f\u3002 \u5728 IDEA \u4e2d\uff0c\u89e6\u53d1\u91cd\u542f\u7684\u65b9\u5f0f\u662f Build \u9879\u76ee\uff0c\u8fd9\u6837\u80fd\u66f4\u65b0\u7c7b\u8def\u5f84\u3002","title":"DevTools \u81ea\u52a8\u91cd\u542f\u539f\u7406"},{"location":"#_3","text":"\u4fee\u6539 Spring Boot \u7684\u914d\u7f6e\u6587\u4ef6\u683c\u5f0f\u4e3a yml\uff0c\u7136\u540e\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a server : port : 8888 # \u4fee\u6539\u9ed8\u8ba4\u7aef\u53e3\uff0c\u9632\u6b62\u51b2\u7a81","title":"\u521b\u5efa\u914d\u7f6e\u6587\u4ef6"},{"location":"#_4","text":"\u8bf7\u5728\u4f60\u7684\u9879\u76ee\u6dfb\u52a0 springdoc-openapi-ui \u7684\u4f9d\u8d56\uff0c\u5b83\u80fd\u591f\u5e2e\u6211\u4eec\u81ea\u52a8\u751f\u6210\u53ef\u4ea4\u4e92\u7684 API \u6587\u6863\u3002 \u7136\u540e\u6dfb\u52a0\u914d\u7f6e\u6587\u4ef6\uff1a springdoc : swagger-ui : path : /docs # \u4f7f\u7528\u548c FastAPI \u4e00\u81f4\u7684\u6587\u6863\u94fe\u63a5 show-extensions : true # \u652f\u6301\u6821\u9a8c\u76f8\u5173\u7684\u6ce8\u89e3 show-common-extensions : true \u8865\u5145\u6587\u6863\u7684\u4e00\u4e9b\u76f8\u5173\u4fe1\u606f\uff0c\u8bf7\u5c06\u5982\u4e0b\u4ee3\u7801\u6dfb\u52a0\u5230\u67d0\u4e2a\u88ab\u6807\u8bb0\u4e86 @Configuration \u6ce8\u89e3\u7684\u7c7b\u4e0b\u3002 \u66f4\u591a\u53ef\u8865\u5145\u7684\u4fe1\u606f\u8bf7\u53c2\u8003\u6587\u6863\u3002 @Bean public OpenAPI openAPI () { Info info = new Info () . title ( \"Spring doc\" ) . version ( \"0.1.0\" ); return new OpenAPI (). info ( info ); } \u9879\u76ee\u542f\u52a8\u540e\u8bbf\u95ee http://localhost:8888/docs \u5730\u5740\u5373\u53ef\u770b\u5230\u751f\u6210\u7684\u6587\u6863\u3002 \u4f60\u53ef\u4ee5\u67e5\u9605 \u65b0\u624b\u5de5\u7a0b\u5e2b\u7684\u7a0b\u5f0f\u6559\u5ba4 \u7684\u4e00\u7bc7 \u76f8\u5173\u6559\u7a0b \u6765\u4e86\u89e3\u57fa\u7840\u7528\u6cd5\u3002","title":"\u81ea\u52a8\u751f\u6210\u6587\u6863"},{"location":"#jsr-303","text":"\u5728 swagger \u6587\u6863\u4e2d\uff0c\u6821\u9a8c bean \u7684\u6ce8\u89e3\u5f97\u5230\u4e86\u652f\u6301\u3002 \u5982\u679c\u6211\u4eec\u8f93\u5165\u4e86\u4e0d\u7b26\u5408\u8981\u6c42\u7684\u53c2\u6570\uff0c\u5b83\u4f1a\u5f39\u6846\u63d0\u793a\uff0c\u800c\u975e\u663e\u793a\u670d\u52a1\u5668\u8fd4\u56de\u7684\u9519\u8bef\u4fe1\u606f\u3002 \u800c\u5982\u679c\u5e0c\u671b\u663e\u793a\u8fd9\u4e9b\u6821\u9a8c\u6ce8\u89e3\u7684\u4fe1\u606f\uff0c\u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u5f00\u542f\u63d2\u4ef6\u3002 \u4f60\u53ef\u4ee5\u53c2\u8003\u4f5c\u8005\u5728 Issues \u4e2d\u7684\u56de\u590d","title":"\u652f\u6301 JSR-303"},{"location":"#_5","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cSpring \u5e76\u4e0d\u4f1a\u5e2e\u6211\u4eec\u5bf9 controller \u4e2d\u83b7\u53d6\u5230\u7684\u8bf7\u6c42\u53c2\u6570\u8fdb\u884c\u6821\u9a8c\uff0c\u9700\u8981\u901a\u8fc7\u6ce8\u89e3\u624b\u52a8\u914d\u7f6e\u3002 \u4f60\u53ef\u4ee5\u9605\u8bfb \u4f7f\u7528 Spring Validation \u4f18\u96c5\u5730\u6821\u9a8c\u53c2\u6570 \u6765\u4e86\u89e3\u6821\u9a8c\u76f8\u5173\u64cd\u4f5c\u7684\u8be6\u60c5\u3002 \u66f4\u591a\u6821\u9a8c\u76f8\u5173\u53ef\u7528\u7684\u6ce8\u89e3\u53ef\u4ee5\u67e5\u770b javax.validation.constraints \u5305\u4e0b\u7684\u5185\u5bb9\uff0c \u4f60\u53ea\u9700\u8981\u5728\u4ee3\u7801\u5bfc\u5165\u90e8\u5206\uff0c\u70b9\u51fb constraints \u4f4d\u7f6e\u8df3\u8f6c\u5373\u53ef\u5b9a\u4f4d\u3002 \u5982\u679c\u6709\u5199\u7684\u5f88\u5b8c\u5584\u7684\u6587\u7ae0\uff0c\u672c\u6559\u7a0b\u4e0d\u4f1a\u989d\u5916\u9020\u8f6e\u5b50\uff0c\u53ea\u662f\u7ed9\u51fa\u539f\u6587\u94fe\u63a5\u3002 \u672c\u6559\u7a0b\u5c06\u4e0d\u4f1a\u5728\u540e\u9762\u4ecb\u7ecd\u6821\u9a8c\u76f8\u5173\u7684\u5185\u5bb9\uff0cSpring \u7684\u6ce8\u89e3\u53c2\u6570\u6821\u9a8c\u6bd4 FastAPI \u9ad8\u5230\u4e0d\u77e5\u9053\u54ea\u91cc\u53bb\u4e86\u3002","title":"\u53c2\u6570\u6821\u9a8c"},{"location":"#_6","text":"\u8bf7\u9605\u8bfb SpringBoot \u5982\u4f55\u7edf\u4e00\u540e\u7aef\u8fd4\u56de\u683c\u5f0f\uff1f\u8001\u9e1f\u4eec\u90fd\u662f\u8fd9\u6837\u73a9\u7684\uff01 \uff0c\u7136\u540e\u7ed3\u5408\u524d\u4e00\u8282\u7684\u5f02\u5e38\u5904\u7406\u3002 \u9700\u8981\u6ce8\u610f\uff0c\u4f7f\u7528 @RestControllerAdvice \u6765\u7edf\u4e00\u8fd4\u56de\u7ed3\u679c\u4e4b\u540e\uff0c\u4f1a\u5f71\u54cd\u5230 swagger \u6587\u6863\u7684\u8bbf\u95ee\u3002 \u4f60\u9700\u8981\u8bbe\u7f6e basePackages \u5c5e\u6027\uff0c\u9650\u5b9a\u53ea\u626b\u63cf\u81ea\u5df1\u4ee3\u7801\u7684\u5305\u3002","title":"\u7edf\u4e00\u8fd4\u56de\u7ed3\u679c"},{"location":"#_7","text":"\u5173\u4e8e\u6b64\u90e8\u5206\uff0cSpring \u672c\u8eab\u5c31\u5df2\u7ecf\u505a\u7684\u5f88\u597d\u4e86\u3002\u6211\u4eec\u5c06\u5728\u540e\u7eed\u7684\u7ae0\u8282\u4e2d\u5c55\u5f00\u4ecb\u7ecd\u3002","title":"\u4f9d\u8d56\u6ce8\u5165"},{"location":"#_8","text":"container / spring application context \u7528\u4e8e\u521b\u5efa\u548c\u7ba1\u7406\u5e94\u7528\u7ec4\u4ef6 \u5728\u5bb9\u5668\u57fa\u7840\u4e0a spring \u548c\u4e00\u4e9b\u5176\u4ed6\u7684\u5e93\u63d0\u4f9b\u4e86\u5404\u79cd\u73b0\u4ee3\u7a0b\u5e8f\u5f00\u53d1\u6240\u9700\u8981\u7684\u529f\u80fd components / beans \u88ab\u7ec4\u88c5\u5230\u4e00\u8d77\u6765\u6784\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u5e94\u7528\u7a0b\u5e8f xml configuration java-based configuration class @Configuration \u544a\u8bc9 spring \u8fd9\u4e2a\u7c7b\u662f\u7528\u4e8e\u63d0\u4f9b\u7ec4\u4ef6\u5230\u5bb9\u5668 @Bean \u6807\u8bb0\u65b9\u6cd5\uff0c\u8868\u793a\u8be5\u65b9\u6cd5\u8fd4\u56de\u7684\u7c7b\u5e94\u8be5\u4f5c\u4e3a\u7ec4\u4ef6\u88ab\u6dfb\u52a0\u5230\u5bb9\u5668 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cbean \u7684 id \u548c\u65b9\u6cd5\u540d\u76f8\u540c \u76f8\u6bd4 xml \u7684\u914d\u7f6e\u65b9\u5f0f\uff0c\u6ce8\u89e3\u7684\u65b9\u5f0f\u6709\u7740\u66f4\u597d\u7684\u7c7b\u578b\u5b89\u5168\u548c\u53ef\u91cd\u6784\u6027 \u5927\u90e8\u5206\u65f6\u95f4\u4e0d\u9700\u8981\u624b\u52a8\u6765\u77e5\u540d\u914d\u7f6e\uff0csping \u53ef\u4ee5\u81ea\u52a8\u914d\u7f6e dependency injection \u7531\u5bb9\u5668\u6765\u521b\u5efa\u548c\u7ef4\u62a4\u6240\u6709\u7684\u7ec4\u4ef6\uff0c\u7136\u540e\u5c06\u7ec4\u4ef6\u6ce8\u5165\u5230\u9700\u8981\u5b83\u4eec\u7684\u5730\u65b9 constructor argyments property accessor methods automatic configuration component scanning \u4ece\u5e94\u7528\u7684 classpath \u81ea\u52a8\u53d1\u73b0\u7ec4\u4ef6\u5e76\u521b\u5efa\u5230\u5bb9\u5668 autowiring \u81ea\u52a8\u6ce8\u5165\u7ec4\u4ef6\u5230\u5176\u4ed6\u9700\u8981\u5b83\u7684\u7ec4\u4ef6\u7684\u4f4d\u7f6e spring boot \u6839\u636e\u4f60\u7684 classpath\uff0c\u73af\u5883\u53d8\u91cf\uff0c\u548c\u5176\u4ed6\u56e0\u7d20\u6765\u8fdb\u884c\u81ea\u52a8\u7684\u914d\u7f6e\u548c\u7ec4\u88c5 \u5927\u91cf\u51cf\u5c11\u4e86\u663e\u793a\u7684\u914d\u7f6e\uff0c\u4e0d\u7ba1\u662f xml \u8fd8\u662f java \u6ce8\u89e3 \u5c3d\u53ef\u80fd\u7684\u4f7f\u7528\u81ea\u52a8\u914d\u7f6e\uff0c\u5e76\u4e14\u629b\u5f03 xml \u7684\u914d\u7f6e\u65b9\u5f0f","title":"\u524d\u7f6e\u6982\u5ff5"},{"location":"#_9","text":"\u5178\u578b\u7684 maven \u6216\u8005 gradle \u9879\u76ee\uff0c\u5305\u542b\u6e90\u7801\uff0c\u6d4b\u8bd5\u4ee3\u7801\uff0c\u548c\u8d44\u6e90\u76ee\u5f55 maven \u76f8\u5173 mvnw \u548c mvnw.cmd \u662f maven wrapper \u7684\u811a\u672c\uff0c\u53ef\u4ee5\u8ba9\u4f60\u65e0\u9700\u63d0\u524d\u5b89\u88c5 maven pom.xml maven \u6784\u5efa\u7684\u5177\u4f53\u7ec6\u8282 <parent> \u5b9a\u4e49\u4f9d\u8d56\u7684\u7236 pom \u6587\u4ef6\uff0c\u901a\u8fc7\u6307\u5b9a spring-boot-starter-parent \u7684\u7248\u672c\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u4ed6\u76f8\u5173\u4f9d\u8d56\u7684\u7248\u672c\u4ea4\u7531\u5b83\u6765\u786e\u5b9a <dependencies> \u5b9a\u4e49\u6211\u4eec\u9700\u8981\u4f7f\u7528\u7684\u4f9d\u8d56 starter \u7ed3\u5c3e\u7684\u4f9d\u8d56\u9879 id\uff0c\u8868\u660e\u5b83\u672c\u8eab\u4e0d\u5305\u542b\u5b9e\u9645\u7684\u4ee3\u7801\uff0c\u53ea\u662f\u7ec4\u5408\u5176\u4ed6\u7684\u5e93 \u4f60\u7684\u4f9d\u8d56\u9879\u4f1a\u51cf\u5c11\u5f88\u591a \u8bed\u4e49\u5316\u7684\u786e\u5b9a\u4f9d\u8d56\u80fd\u7ed9\u6211\u4eec\u5e26\u6765\u7684\u529f\u80fd \u4f60\u4e0d\u5fc5\u624b\u52a8\u53bb\u6307\u5b9a\u5404\u4e2a\u4f9d\u8d56\u7684\u7248\u672c\uff0cspring boot \u4f1a\u5e2e\u4f60\u786e\u5b9a\u5404\u4e2a\u5408\u9002\u7684\u7248\u672c <plugins> \u6784\u5efa\u7684\u63d2\u4ef6\uff0cspring boot \u63d2\u4ef6\u63d0\u4f9b\u4e86\u5f88\u591a\u529f\u80fd \u4f7f\u7528 maven \u6765\u542f\u52a8\u7a0b\u5e8f \u786e\u4fdd\u6240\u6709\u7684\u4f9d\u8d56\u5e93\u4f1a\u88ab\u6253\u5305\u5230 JAR \u6587\u4ef6\uff0c\u4ee5\u53ca\u5728\u8fd0\u884c\u65f6\u5904\u4e8e classpath \u4e0b \u5728 manifest \u6587\u4ef6\u4e2d\u6307\u5b9a\u4e86\u9879\u76ee\u542f\u52a8\u7684\u4e3b\u7c7b spring \u76f8\u5173 application.properties \u6307\u5b9a\u9879\u76ee\u914d\u7f6e static templates \u7a0b\u5e8f\u542f\u52a8 @SpringBootApplication @SpringBootConfiguration \u4e00\u4e2a\u7279\u5b9a\u5f62\u5f0f\u7684 @Configuration \u6ce8\u89e3 \u4f60\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e24\u4e2a\u7b80\u5355\u7684\u914d\u7f6e\u5230\u542f\u52a8\u7c7b\u4e0b \u521b\u5efa\u66f4\u591a\u7684\u914d\u7f6e\u7c7b\u6765\u63d0\u4f9b\u66f4\u591a\u7684\u4e0d\u80fd\u81ea\u52a8\u914d\u7f6e\u7684\u7684\u4e1c\u897f @EnableAutoConfiguration \u542f\u7528 spring boot \u7684\u81ea\u52a8\u914d\u7f6e\u529f\u80fd @ComponentScan \u542f\u52a8\u7ec4\u4ef6\u626b\u63cf\uff0c\u8fd9\u4f7f\u5f97 spring \u80fd\u591f\u81ea\u52a8\u53d1\u73b0\u88ab\u6807\u8bb0\u4e3a\u7ec4\u4ef6\u7684\u7c7b\uff0c\u5e76\u4e14\u6ce8\u518c\u5230\u5bb9\u5668 main() \u5728 JAR \u6587\u4ef6\u88ab\u6267\u884c\u65f6\u8fd0\u884c\u6b64\u65b9\u6cd5\uff0c\u6837\u677f\u4ee3\u7801 run() \u6307\u5b9a\u771f\u6b63\u7684\u7ec4\u88c5\u7a0b\u5e8f\u7684\u4ee3\u7801\uff0c\u521b\u5efa spring application context \u4f20\u5165\u7684\u914d\u7f6e\u7c7b\u53c2\u6570\u4e0d\u5fc5\u548c\u542f\u52a8\u7c7b\u76f8\u540c\uff0c\u4f46\u8fd9\u662f\u6700\u5e38\u89c1\u548c\u65b9\u4fbf\u7684\u9009\u62e9 \u4f20\u5165\u547d\u4ee4\u884c\u53c2\u6570\u5230\u8be5\u65b9\u6cd5 \u7a0b\u5e8f\u6d4b\u8bd5 \u76f4\u63a5\u6253\u5305\u8fd0\u884c\u6765\u6d4b\u8bd5 ./mvnw package java -jar target/taco-cloud-0.0.1-SNAPSHOT.jar ./mvnw spring-boot:run \u7f16\u5199\u6d4b\u8bd5\u4ee3\u7801 \u5373\u4f7f\u6d4b\u8bd5\u4ee3\u7801\u4e3a\u7a7a\uff0c\u6211\u4eec\u4e5f\u80fd\u901a\u8fc7\u8fd0\u884c\u6d4b\u8bd5\u4ee3\u7801\u6765\u5224\u65ad\u7a0b\u5e8f\u662f\u5426\u80fd\u591f\u4e89\u53d6\u6267\u884c @SpringBootTest \u544a\u8bc9 JUnit \u6765\u4f7f\u7528 spring boot \u7684\u80fd\u529b\u6765\u521d\u59cb\u5316\u6d4b\u8bd5 @ExtendWith(SpringExtension.class) \u6dfb\u52a0 spring \u6d4b\u8bd5\u7684\u80fd\u529b\u5230 JUnit 5 \u53ef\u4ee5\u7406\u89e3\u4e3a\u6267\u884c\u4e86 SpringApplication.run() ./mvnw test","title":"\u6587\u4ef6\u7ed3\u6784"},{"location":"#_10","text":"Tomcat \u662f spring boot \u7a0b\u5e8f\u7684\u4e00\u90e8\u5206\uff0c\u800c\u65e0\u9700\u5c06\u4ee3\u7801\u90e8\u7f72\u5230 Tomcat spring boot \u7684\u81ea\u52a8\u914d\u7f6e\u5e93\uff0c\u76d1\u6d4b\u5230\u6211\u4eec\u4f7f\u7528\u7684\u4f9d\u8d56\u9879\uff0c\u7136\u540e\u4f7f\u5f97 spring application context \u6765\u542f\u7528\u548c\u914d\u7f6e\u5bf9\u5e94\u7684\u529f\u80fd Spring Boot DevTools \u4e0d\u662f\u4e00\u4e2a IDE \u5de5\u5177 \u5f00\u53d1\u65f6\u542f\u7528\uff0c\u751f\u4ea7\u73af\u5883\u4e0b\u81ea\u52a8\u7981\u7528 \u81ea\u52a8\u7981\u7528\u6a21\u677f\u7f13\u5b58 \u6a21\u677f\u6587\u4ef6\u9ed8\u8ba4\u4f1a\u88ab\u7a0b\u5e8f\u7f13\u5b58\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u4fee\u6539\u6a21\u677f\u6587\u4ef6\u65e0\u6cd5\u5728\u6d4f\u89c8\u5668\u4e2d\u7684\u5230\u66f4\u65b0 \u5982\u679c\u4f60\u5e0c\u671b\u53d8\u5316\u65f6\u81ea\u52a8\u5237\u65b0\u6d4f\u89c8\u5668\uff0c\u5c31\u9700\u8981\u989d\u5916\u5b89\u88c5\u6d4f\u89c8\u5668\u63d2\u4ef6 h2 \u6570\u636e\u5e93\u7ec8\u7aef http://localhost:8080/h2-console \u597d\u50cf\u6ca1\u5565\u7528\uff0cIDEA \u7684\u529f\u80fd\u66f4\u5f3a","title":"\u6784\u5efa\u548c\u8fd0\u884c\u7a0b\u5e8f"},{"location":"#spring","text":"core spring spring \u5b87\u5b99\u7684\u57fa\u7840\uff0c\u63d0\u4f9b container \u548c di \u7684\u6846\u67b6 spring MVC\uff0cREST APIs \u57fa\u7840\u7684\u6570\u636e\u5e93\u652f\u6301 JdbcTemplate reactive program, Spring WebFlux Spring Boot starter dependencies\uff0c\u4f9d\u8d56\u7ba1\u7406 autoconfiguration Actuator \u76d1\u63a7\u8fd0\u884c\u65f6\u7a0b\u5e8f\u7684\u5185\u90e8\u72b6\u6001 \u7075\u6d3b\u5730\u6307\u5b9a\u73af\u5883\u914d\u7f6e \u5728\u6838\u578b\u5e93\u4e0a\u989d\u5916\u7684\u6d4b\u8bd5\u652f\u6301 Spring boot cli \u4f7f\u7528 groovy \u811a\u672c\u6765\u7f16\u5199\u7a0b\u5e8f Spring Data \u4f7f\u7528 Java \u63a5\u53e3\u6765\u5b9a\u4e49\u6570\u636e\u6a21\u578b \u4f7f\u7528\u8bed\u4e49\u5316\u7684\u51fd\u6570\u6765\u8fdb\u884c CRUD \u7684\u64cd\u4f5c \u652f\u6301\u5305\u62ec\u5173\u7cfb\u578b\uff0c\u6587\u6863\u578b\uff0cgraph \u7b49\u7c7b\u578b\u7684\u6570\u636e\u5e93 Spring Security \u9274\u522b\uff0c\u9274\u6743\uff0cAPI \u5b89\u5168 Spring Integration \u548c Spring Batch \u6574\u5408\u5176\u4ed6\u7a0b\u5e8f \u524d\u8005\u5904\u7406\u5b9e\u65f6\u7684\u6574\u5408\uff0c\u540e\u8005\u6309\u7167\u6279\u6b21\u548c\u89e6\u53d1\u5668\u6765\u8fdb\u884c\u6574\u5408\u5904\u7406 Spring Cloud \u5fae\u670d\u52a1\uff0c\u5373\u7ec4\u5408\u591a\u4e2a\u5355\u72ec\u90e8\u7f72\u7684\u7a0b\u5e8f Cloud Native Spring in Action Spring Native \u5c06 Spring Boot \u9879\u76ee\u7f16\u8bd1\u7a0b\u5e8f\u53ef\u6267\u884c\u6587\u4ef6 GraalVM native-image compiler \u975e\u5e38\u5feb\u7684\u542f\u52a8\u548c\u5f88\u5c0f\u7684\u5360\u7528\u7a7a\u95f4","title":"spring \u751f\u6001\u4ecb\u7ecd"},{"location":"first-steps/","text":"\u7b2c\u4e00\u6b65 \u4ece\u4e00\u4e2a\u6700\u7b80\u5355\u7684 Spring \u793a\u4f8b\u6765\u770b\u3002 @RestController public class Controller { @GetMapping ( \"/\" ) Map < String , String > root () { return Map . of ( \"message\" , \"Hello World\" ); } } \u542f\u52a8\u7a0b\u5e8f\uff0c\u8bbf\u95ee\u5bf9\u5e94\u5730\u5740\uff0c\u4f60\u5c06\u770b\u5230\u5982\u4e0b JSON \u54cd\u5e94\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u7edf\u4e00\u4e86\u8fd4\u56de\u7684\u683c\u5f0f\u3002 \u540c\u6837\u7684\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5728\u4ea4\u4e92\u5f0f\u6587\u6863\u4e2d\u8fdb\u884c\u63a5\u53e3\u6d4b\u8bd5\u3002 { \"code\" : 200 , \"data\" : { \"message\" : \"Hello World\" }, \"message\" : \"\u8c03\u7528\u6210\u529f\" , \"timestamp\" : 1656296142904 } \u5982\u679c\u4f60\u4e0d\u719f\u6089 Spring \u7684\u4f9d\u8d56\u6ce8\u5165\uff0c\u6216\u8bb8\u4f1a\u7591\u60d1\u8be5\u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u7f6e\u4e8e\u4f55\u5904\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u4f60\u53ef\u4ee5\u968f\u610f\u653e\u7f6e\uff0c\u53ea\u8981\u5904\u4e8e SpringApplication \u7684\u540c\u7ea7\u6216\u66f4\u6df1\u5c42\u7ea7\u7684\u5305\u4e0b\u5373\u53ef\u3002 Spring \u80fd\u591f\u81ea\u52a8\u626b\u63cf\u4f60\u7684\u4ee3\u7801\uff0c\u5c06\u5176\u6ce8\u518c\u5230\u8be5\u5230\u7684\u4f4d\u7f6e\u3002 \u5173\u4e8e\u4f9d\u8d56\u6ce8\u5165\uff0c\u4f60\u53ef\u4ee5\u9605\u8bfb \u6df1\u5165\u6d45\u51fa Spring \u6846\u67b6\uff0c\u539f\u6765\u4ee5\u524d\u767d\u5b66\u4e86\uff01 - \u6398\u91d1 \u5b9a\u4e49\u4e00\u4e2a controller \u5728 springboot \u4e2d\u6211\u4eec\u4f7f\u7528\u6ce8\u89e3\u6765\u6307\u5b9a\u76f8\u5173\u7c7b\uff0c\u5b57\u6bb5\uff0c\u65b9\u6cd5\u6240\u53d1\u6325\u7684\u4f5c\u7528\uff0c\u7ed9\u4e00\u4e2a\u7c7b\u52a0\u4e0a @RestController \u6ce8\u89e3\u6765\u4f7f\u5f97\u5176\u6210\u4e3a controller\u3002 \u7b49\u6548\u4e8e\u52a0\u4e0a @Controller \u548c @ResponseBody \u4e24\u4e2a\u6ce8\u89e3\u3002 \u800c @Controller \u6ce8\u89e3\u5b9e\u9645\u4e0a\u88ab\u52a0\u4e0a\u4e86 @Component \u6ce8\u89e3\uff0c\u8fd9\u4e2a\u6ce8\u89e3\u7684\u4f5c\u7528\u662f\u8ba9 springboot \u80fd\u81ea\u52a8\u521d\u59cb\u5316\u7c7b\u7684\u5b9e\u4f8b\u5230\u5bb9\u5668\u4e2d\uff0c\u7136\u540e\u5728\u5408\u9002\u7684\u4f4d\u7f6e\u6ce8\u5165\u9700\u8981\u7684\u5b9e\u4f8b\u3002 @ResponseBody \u6ce8\u89e3\u7684\u4f5c\u7528\u662f\u8ba9\u51fd\u6570\u7684\u8fd4\u56de\u503c\u76f4\u63a5\u7ed1\u5b9a\u5230 web \u54cd\u5e94\u7684\u6b63\u6587\u3002 \u6709\u522b\u4e8e\u5355\u72ec\u4f7f\u7528 @Controller \u6ce8\u89e3\u65f6\u901a\u5e38\u6211\u4eec\u662f\u6307\u5b9a\u8fd4\u56de\u7684\u9875\u9762\u6a21\u677f\u540d\uff0c\u5728\u524d\u540e\u7aef\u5206\u79bb\u7684\u65f6\u4ee3\uff0c\u524d\u7aef\u901a\u8fc7\u540e\u7aef\u8fd4\u56de\u7684 json \u6570\u636e\u6765\u52a0\u8f7d\u754c\u9762\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0cRestController \u8d1f\u8d23\u5b9a\u4e49\u8bf7\u6c42\u7684\u8def\u5f84\uff0c\u8c03\u7528\u5177\u4f53\u7684\u5904\u7406\u65b9\u6cd5\uff0c\u8fd4\u56de\u5904\u7406\u7ed3\u679c\u7ed9\u5ba2\u6237\u7aef\u3002 \u5173\u4e8e controller\uff0c\u5b9e\u9645\u4e0a\u5b83\u662f\u5bf9\u4e8e java web \u4e2d\u7684 servlet \u8fdb\u884c\u4e86\u5c01\u88c5\u3002 \u5728\u6211\u4eec\u7684\u540e\u7aef\u7a0b\u5e8f\u4e2d\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u63a5\u6536\u53d1\u6765\u7684\u8bf7\u6c42\uff0c\u8bbf\u95ee\u5bf9\u5e94\u7684 service \u4ee5\u5f97\u5230\u7ed3\u679c\uff0c\u8fd4\u56de\u56de\u53bb\u3002 \u4f7f\u7528\u6a21\u677f\u8fdb\u884c\u54cd\u5e94 \u586b\u5145\u7c7b\u578b\u6570\u636e\uff0c\u4f20\u9012\u8bf7\u6c42\u5230\u89c6\u56fe\u6765\u521b\u5efa HTML \u6587\u4ef6\uff0c\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 \u65b9\u6cd5\u8fd4\u56de\u7684\u5b57\u7b26\u4e32\u4e3a\u4e00\u4e2a view \u7684\u903b\u8f91\u540d\u79f0\uff0cview \u5b9e\u9645\u7684\u5904\u7406\u65b9\u5f0f\u53d6\u51b3\u4e8e\u5f88\u591a\u56e0\u7d20\uff0c\u6bd4\u5982\u4f60\u9009\u53d6\u7684\u6a21\u677f\u5f15\u64ce \u7a0b\u5e8f\u4f1a\u6309\u7167\u903b\u8f91\u89c6\u56fe\u540d\u79f0\u6765\u5bfb\u627e templates \u6587\u4ef6\u5939\u4e0b\u7684 html \u6587\u4ef6 \u5173\u4e8e\u6a21\u677f\u5f15\u64ce\u7684\u4f7f\u7528\u8fd9\u91cc\u4e0d\u505a\u4ecb\u7ecd\uff0c\u56e0\u4e3a\u76f8\u5bf9\u6ca1\u6709\u90a3\u4e48\u4e3b\u6d41 \u4f7f\u7528\u4e0d\u540c\u7684 HTTP \u65b9\u6cd5 \u5bf9\u51fd\u6570\u51a0\u4ee5 @RequestMapping \u6ce8\u89e3\uff0c\u8868\u793a\u6b64\u51fd\u6570\u5904\u7406\u7279\u5b9a\u8bbf\u95ee\u573a\u666f\u4e0b\u7684\u8bf7\u6c42\u3002 \u901a\u8fc7\u586b\u5165\u53c2\u6570\u6765\u9650\u5b9a\u4e00\u4e9b\u6761\u4ef6\uff0c \u6bd4\u5982 path \u6307\u5b9a\u8bf7\u6c42\u8bbf\u95ee\u7684\u8def\u5f84\uff0cmethod \u6307\u5b9a\u8bf7\u6c42\u6240\u4f7f\u7528\u7684\u65b9\u6cd5\u3002 \u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u4f7f\u7528\u5bf9\u5e94\u7279\u5b9a http \u65b9\u6cd5\u7684\u6ce8\u89e3\uff0c\u6bd4\u5982 @GetMapping \u7b49\u4ef7\u4e8e @RequestMapping(method = RequestMethod.GET) \u3002 \u800c @RequestMapping \u7684\u4f5c\u7528\u901a\u5e38\u662f\u88ab\u7f6e\u4e8e\u7c7b\u4e0a\uff0c\u901a\u8fc7\u6307\u5b9a path \u6765\u6307\u5b9a\u8be5\u7c7b\u4e2d\u65b9\u6cd5\u6240\u5904\u7406\u7684\u8bf7\u6c42\u7684\u5171\u540c\u524d\u7f00\u3002 \u8fd9\u91cc\u7684 HTTP \u65b9\u6cd5\u6709\u4e0b\u5217\u4e4b\u4e00\uff1a POST \u521b\u5efa\u6570\u636e GET \u8bfb\u53d6\u6570\u636e PUT \u66f4\u65b0\u6570\u636e DELETE \u5220\u9664\u6570\u636e ...\u4ee5\u53ca\u66f4\u5c11\u89c1\u7684\u51e0\u79cd\uff1a OPTIONS HEAD PATCH TRACE \u8fd4\u56de\u5185\u5bb9 \u6b64\u524d\u7684\u51c6\u5907\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u7edf\u4e00\u4e86\u8fd4\u56de\u7684\u683c\u5f0f\u548c\u5f02\u5e38\u7684\u6355\u83b7\u5904\u7406\u3002 \u6240\u4ee5\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a Map\uff0c\u5bf9\u8c61\uff0c\u5b57\u7b26\u4e32\uff0c\u6216\u662f\u76f4\u63a5\u629b\u51fa\u5f02\u5e38\uff0c\u90fd\u80fd\u591f\u88ab\u5f88\u597d\u7684\u5e8f\u5217\u5316\u4e3a JSON \u683c\u5f0f\u8fd4\u56de\u3002","title":"\u7b2c\u4e00\u6b65"},{"location":"first-steps/#_1","text":"\u4ece\u4e00\u4e2a\u6700\u7b80\u5355\u7684 Spring \u793a\u4f8b\u6765\u770b\u3002 @RestController public class Controller { @GetMapping ( \"/\" ) Map < String , String > root () { return Map . of ( \"message\" , \"Hello World\" ); } } \u542f\u52a8\u7a0b\u5e8f\uff0c\u8bbf\u95ee\u5bf9\u5e94\u5730\u5740\uff0c\u4f60\u5c06\u770b\u5230\u5982\u4e0b JSON \u54cd\u5e94\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u7edf\u4e00\u4e86\u8fd4\u56de\u7684\u683c\u5f0f\u3002 \u540c\u6837\u7684\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5728\u4ea4\u4e92\u5f0f\u6587\u6863\u4e2d\u8fdb\u884c\u63a5\u53e3\u6d4b\u8bd5\u3002 { \"code\" : 200 , \"data\" : { \"message\" : \"Hello World\" }, \"message\" : \"\u8c03\u7528\u6210\u529f\" , \"timestamp\" : 1656296142904 } \u5982\u679c\u4f60\u4e0d\u719f\u6089 Spring \u7684\u4f9d\u8d56\u6ce8\u5165\uff0c\u6216\u8bb8\u4f1a\u7591\u60d1\u8be5\u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u7f6e\u4e8e\u4f55\u5904\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u4f60\u53ef\u4ee5\u968f\u610f\u653e\u7f6e\uff0c\u53ea\u8981\u5904\u4e8e SpringApplication \u7684\u540c\u7ea7\u6216\u66f4\u6df1\u5c42\u7ea7\u7684\u5305\u4e0b\u5373\u53ef\u3002 Spring \u80fd\u591f\u81ea\u52a8\u626b\u63cf\u4f60\u7684\u4ee3\u7801\uff0c\u5c06\u5176\u6ce8\u518c\u5230\u8be5\u5230\u7684\u4f4d\u7f6e\u3002 \u5173\u4e8e\u4f9d\u8d56\u6ce8\u5165\uff0c\u4f60\u53ef\u4ee5\u9605\u8bfb \u6df1\u5165\u6d45\u51fa Spring \u6846\u67b6\uff0c\u539f\u6765\u4ee5\u524d\u767d\u5b66\u4e86\uff01 - \u6398\u91d1","title":"\u7b2c\u4e00\u6b65"},{"location":"first-steps/#controller","text":"\u5728 springboot \u4e2d\u6211\u4eec\u4f7f\u7528\u6ce8\u89e3\u6765\u6307\u5b9a\u76f8\u5173\u7c7b\uff0c\u5b57\u6bb5\uff0c\u65b9\u6cd5\u6240\u53d1\u6325\u7684\u4f5c\u7528\uff0c\u7ed9\u4e00\u4e2a\u7c7b\u52a0\u4e0a @RestController \u6ce8\u89e3\u6765\u4f7f\u5f97\u5176\u6210\u4e3a controller\u3002 \u7b49\u6548\u4e8e\u52a0\u4e0a @Controller \u548c @ResponseBody \u4e24\u4e2a\u6ce8\u89e3\u3002 \u800c @Controller \u6ce8\u89e3\u5b9e\u9645\u4e0a\u88ab\u52a0\u4e0a\u4e86 @Component \u6ce8\u89e3\uff0c\u8fd9\u4e2a\u6ce8\u89e3\u7684\u4f5c\u7528\u662f\u8ba9 springboot \u80fd\u81ea\u52a8\u521d\u59cb\u5316\u7c7b\u7684\u5b9e\u4f8b\u5230\u5bb9\u5668\u4e2d\uff0c\u7136\u540e\u5728\u5408\u9002\u7684\u4f4d\u7f6e\u6ce8\u5165\u9700\u8981\u7684\u5b9e\u4f8b\u3002 @ResponseBody \u6ce8\u89e3\u7684\u4f5c\u7528\u662f\u8ba9\u51fd\u6570\u7684\u8fd4\u56de\u503c\u76f4\u63a5\u7ed1\u5b9a\u5230 web \u54cd\u5e94\u7684\u6b63\u6587\u3002 \u6709\u522b\u4e8e\u5355\u72ec\u4f7f\u7528 @Controller \u6ce8\u89e3\u65f6\u901a\u5e38\u6211\u4eec\u662f\u6307\u5b9a\u8fd4\u56de\u7684\u9875\u9762\u6a21\u677f\u540d\uff0c\u5728\u524d\u540e\u7aef\u5206\u79bb\u7684\u65f6\u4ee3\uff0c\u524d\u7aef\u901a\u8fc7\u540e\u7aef\u8fd4\u56de\u7684 json \u6570\u636e\u6765\u52a0\u8f7d\u754c\u9762\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0cRestController \u8d1f\u8d23\u5b9a\u4e49\u8bf7\u6c42\u7684\u8def\u5f84\uff0c\u8c03\u7528\u5177\u4f53\u7684\u5904\u7406\u65b9\u6cd5\uff0c\u8fd4\u56de\u5904\u7406\u7ed3\u679c\u7ed9\u5ba2\u6237\u7aef\u3002 \u5173\u4e8e controller\uff0c\u5b9e\u9645\u4e0a\u5b83\u662f\u5bf9\u4e8e java web \u4e2d\u7684 servlet \u8fdb\u884c\u4e86\u5c01\u88c5\u3002 \u5728\u6211\u4eec\u7684\u540e\u7aef\u7a0b\u5e8f\u4e2d\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u63a5\u6536\u53d1\u6765\u7684\u8bf7\u6c42\uff0c\u8bbf\u95ee\u5bf9\u5e94\u7684 service \u4ee5\u5f97\u5230\u7ed3\u679c\uff0c\u8fd4\u56de\u56de\u53bb\u3002","title":"\u5b9a\u4e49\u4e00\u4e2a controller"},{"location":"first-steps/#_2","text":"\u586b\u5145\u7c7b\u578b\u6570\u636e\uff0c\u4f20\u9012\u8bf7\u6c42\u5230\u89c6\u56fe\u6765\u521b\u5efa HTML \u6587\u4ef6\uff0c\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 \u65b9\u6cd5\u8fd4\u56de\u7684\u5b57\u7b26\u4e32\u4e3a\u4e00\u4e2a view \u7684\u903b\u8f91\u540d\u79f0\uff0cview \u5b9e\u9645\u7684\u5904\u7406\u65b9\u5f0f\u53d6\u51b3\u4e8e\u5f88\u591a\u56e0\u7d20\uff0c\u6bd4\u5982\u4f60\u9009\u53d6\u7684\u6a21\u677f\u5f15\u64ce \u7a0b\u5e8f\u4f1a\u6309\u7167\u903b\u8f91\u89c6\u56fe\u540d\u79f0\u6765\u5bfb\u627e templates \u6587\u4ef6\u5939\u4e0b\u7684 html \u6587\u4ef6 \u5173\u4e8e\u6a21\u677f\u5f15\u64ce\u7684\u4f7f\u7528\u8fd9\u91cc\u4e0d\u505a\u4ecb\u7ecd\uff0c\u56e0\u4e3a\u76f8\u5bf9\u6ca1\u6709\u90a3\u4e48\u4e3b\u6d41","title":"\u4f7f\u7528\u6a21\u677f\u8fdb\u884c\u54cd\u5e94"},{"location":"first-steps/#http","text":"\u5bf9\u51fd\u6570\u51a0\u4ee5 @RequestMapping \u6ce8\u89e3\uff0c\u8868\u793a\u6b64\u51fd\u6570\u5904\u7406\u7279\u5b9a\u8bbf\u95ee\u573a\u666f\u4e0b\u7684\u8bf7\u6c42\u3002 \u901a\u8fc7\u586b\u5165\u53c2\u6570\u6765\u9650\u5b9a\u4e00\u4e9b\u6761\u4ef6\uff0c \u6bd4\u5982 path \u6307\u5b9a\u8bf7\u6c42\u8bbf\u95ee\u7684\u8def\u5f84\uff0cmethod \u6307\u5b9a\u8bf7\u6c42\u6240\u4f7f\u7528\u7684\u65b9\u6cd5\u3002 \u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u4f7f\u7528\u5bf9\u5e94\u7279\u5b9a http \u65b9\u6cd5\u7684\u6ce8\u89e3\uff0c\u6bd4\u5982 @GetMapping \u7b49\u4ef7\u4e8e @RequestMapping(method = RequestMethod.GET) \u3002 \u800c @RequestMapping \u7684\u4f5c\u7528\u901a\u5e38\u662f\u88ab\u7f6e\u4e8e\u7c7b\u4e0a\uff0c\u901a\u8fc7\u6307\u5b9a path \u6765\u6307\u5b9a\u8be5\u7c7b\u4e2d\u65b9\u6cd5\u6240\u5904\u7406\u7684\u8bf7\u6c42\u7684\u5171\u540c\u524d\u7f00\u3002 \u8fd9\u91cc\u7684 HTTP \u65b9\u6cd5\u6709\u4e0b\u5217\u4e4b\u4e00\uff1a POST \u521b\u5efa\u6570\u636e GET \u8bfb\u53d6\u6570\u636e PUT \u66f4\u65b0\u6570\u636e DELETE \u5220\u9664\u6570\u636e ...\u4ee5\u53ca\u66f4\u5c11\u89c1\u7684\u51e0\u79cd\uff1a OPTIONS HEAD PATCH TRACE","title":"\u4f7f\u7528\u4e0d\u540c\u7684 HTTP \u65b9\u6cd5"},{"location":"first-steps/#_3","text":"\u6b64\u524d\u7684\u51c6\u5907\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u7edf\u4e00\u4e86\u8fd4\u56de\u7684\u683c\u5f0f\u548c\u5f02\u5e38\u7684\u6355\u83b7\u5904\u7406\u3002 \u6240\u4ee5\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a Map\uff0c\u5bf9\u8c61\uff0c\u5b57\u7b26\u4e32\uff0c\u6216\u662f\u76f4\u63a5\u629b\u51fa\u5f02\u5e38\uff0c\u90fd\u80fd\u591f\u88ab\u5f88\u597d\u7684\u5e8f\u5217\u5316\u4e3a JSON \u683c\u5f0f\u8fd4\u56de\u3002","title":"\u8fd4\u56de\u5185\u5bb9"},{"location":"database/jpa/","text":"Spring Data JPA \u6dfb\u52a0\u4f9d\u8d56 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-data-jpa </artifactId> </dependency> <dependency> <groupId> com.h2database </groupId> <artifactId> h2 </artifactId> <scope> runtime </scope> </dependency> \u8fd9\u91cc\u9009\u7528\u7684\u6570\u636e\u5e93\u4e3a H2 \u6570\u636e\u5e93\uff0c\u5b83\u65e0\u9700\u914d\u7f6e\u8fde\u63a5\uff0c\u505c\u6b62\u540e\u6570\u636e\u81ea\u52a8\u6e05\u9664\uff0c\u5341\u5206\u4fbf\u4e8e\u6d4b\u8bd5\u73af\u5883\u3002 \u5b9a\u4e49\u5b9e\u4f53\u7c7b import javax.persistence.Entity ; import javax.persistence.GeneratedValue ; import javax.persistence.GenerationType ; import javax.persistence.Id ; @Entity public class Customer { @Id @GeneratedValue ( strategy = GenerationType . AUTO ) private Long id ; private String firstName ; private String lastName ; protected Customer () { } public Customer ( String firstName , String lastName ) { this . firstName = firstName ; this . lastName = lastName ; } @Override public String toString () { return String . format ( \"Customer[id=%d, firstName='%s', lastName='%s']\" , id , firstName , lastName ); } public Long getId () { return id ; } public String getFirstName () { return firstName ; } public String getLastName () { return lastName ; } } \u9996\u5148\u5b9a\u4e49\u8868\u793a\u6570\u636e\u7c7b\u7684\u5c5e\u6027\uff0c\u4ee5\u53ca\u4e24\u4e2a\u6784\u9020\u5668\u3002 \u5176\u4e2d\u7a7a\u7684\u6784\u9020\u5668\u662f\u7ed9 JPA \u7528\u7684\uff0c\u6211\u4eec\u4e0d\u8be5\u76f4\u63a5\u8c03\u7528\uff0c\u9700\u8981\u53c2\u6570\u7684\u6784\u9020\u5668\u662f\u7ed9\u6211\u4eec\u7528\u4e8e\u521b\u5efa\u5b58\u5230\u6570\u636e\u5e93\u91cc\u7684\u5b9e\u4f53\u3002 \u51a0\u4ee5 @Entity \u6ce8\u89e3\u7684\u7c7b\u8868\u660e\u5b83\u662f\u4e00\u4e2a JPA \u5b9e\u4f53\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 @Table \u6ce8\u89e3\u6765\u6307\u5b9a\u5bf9\u5e94\u7684\u8868\u540d\uff0c\u8fd9\u91cc\u672a\u6307\u5b9a\u5219\u9ed8\u8ba4\u53d6\u7c7b\u540d\u3002 id \u8fd9\u4e2a\u5c5e\u6027\u88ab\u52a0\u4e0a @Id \u6ce8\u89e3\uff0c\u5219\u8868\u793a\u8be5\u5c5e\u6027\u5bf9\u5e94\u4e8e\u6570\u636e\u8868\u4e2d\u7684\u4e3b\u952e\u3002 @GeneratedValue \u6ce8\u89e3\u5219\u8868\u793a\u6211\u4eec\u65e0\u9700\u624b\u52a8\u8bbe\u7f6e\u8be5\u5b57\u6bb5\u7684\u503c\uff0c\u800c\u662f\u4ea4\u7531 JPA \u6765\u751f\u6210\u3002 \u8fd9\u91cc\u751f\u6210\u7684\u7b56\u7565\u4e3a\u81ea\u589e\u3002 \u7f6e\u4e8e\u5176\u4ed6\u4e24\u4e2a\u5c5e\u6027\uff0c\u6ca1\u6709\u88ab\u52a0\u4e0a\u4efb\u4f55\u6ce8\u89e3\uff0c\u5219\u5bf9\u5e94\u4e8e\u6570\u636e\u8868\u4e2d\u7684\u4e00\u4e2a\u666e\u901a\u5b57\u6bb5\u3002 \u5982\u679c\u4f60\u4f7f\u7528 mysql \u6216 postgresql \u7684\u8bdd\uff0c\u9700\u8981\u6ce8\u610f\u8868\u540d\u6216\u8005\u5b57\u6bb5\u540d\u5e76\u975e\u4fdd\u7559\u5173\u952e\u5b57\u3002 \u6bd4\u5982 user \u3002 \u5b9a\u4e49 CRUD \u7684\u63a5\u53e3 Spring Data JPA \u6700\u5177\u7279\u8272\u7684\u529f\u80fd\u5c31\u662f\u5b83\u80fd\u591f\u5728\u8fd0\u884c\u65f6\u6309\u7167\u6211\u4eec\u7684\u63a5\u53e3\u5b9a\u4e49\u6765\u81ea\u52a8\u751f\u6210\u5b9e\u9645\u7684\u65b9\u6cd5\u3002 import org.springframework.data.repository.CrudRepository ; import java.util.List ; public interface CustomerRepository extends CrudRepository < Customer , Long > { List < Customer > findByLastName ( String lastName ); Customer findById ( long id ); } \u8ba9 CustomerRepository \u7ee7\u627f\u81ea CrudRepository \u63a5\u53e3\uff0c\u4f7f\u7528\u8303\u578b\u53c2\u6570\u6307\u5b9a\u5b9e\u4f53\u7c7b\u53ca\u5176\u4e3b\u952e\u7c7b\u578b\u3002 \u901a\u8fc7\u7ee7\u627f\uff0c\u6211\u4eec\u9ed8\u8ba4\u7684\u5c31\u5177\u6709\u4e86\u4e00\u4e9b\u589e\u5220\u6539\u67e5\u7684\u51fd\u6570\uff0c\u4f60\u4e5f\u53ef\u4ee5\u7ee7\u627f\u5176\u4ed6\u63a5\u53e3\u83b7\u5f97\u66f4\u4e30\u5bcc\u7684\u9884\u7f6e\u529f\u80fd\u3002 \u7136\u540e\u901a\u8fc7\u5b9a\u4e49\u65b9\u6cd5\u7684\u540d\u79f0\uff0c\u6211\u4eec\u5c31\u80fd\u62e5\u6709\u5bf9\u5e94\u529f\u80fd\u7684\u6570\u636e\u5e93\u64cd\u4f5c\u3002 \u7b49\u5230\u7a0b\u5e8f\u542f\u52a8\u65f6\uff0cSpring Data JPA \u4f1a\u4e3a\u6211\u4eec\u521b\u5efa\u6b64\u63a5\u53e3\u7684\u4e00\u4e2a\u5b9e\u73b0\uff0c\u65e0\u9700\u6211\u4eec\u518d\u5199\u989d\u5916\u7684\u4ee3\u7801\u3002 \u6d4b\u8bd5\u529f\u80fd import lombok.extern.log4j.Log4j2 ; import org.springframework.boot.CommandLineRunner ; import org.springframework.context.annotation.Bean ; @Log4j2 @Bean public CommandLineRunner demo ( CustomerRepository repository ) { return ( args ) -> { // save a few customers repository . save ( new Customer ( \"Jack\" , \"Bauer\" )); repository . save ( new Customer ( \"Chloe\" , \"O'Brian\" )); repository . save ( new Customer ( \"Kim\" , \"Bauer\" )); repository . save ( new Customer ( \"David\" , \"Palmer\" )); repository . save ( new Customer ( \"Michelle\" , \"Dessler\" )); // fetch all customers log . info ( \"Customers found with findAll():\" ); log . info ( \"-------------------------------\" ); for ( Customer customer : repository . findAll ()) { log . info ( customer . toString ()); } log . info ( \"\" ); // fetch an individual customer by ID Customer customer = repository . findById ( 1L ); log . info ( \"Customer found with findById(1L):\" ); log . info ( \"--------------------------------\" ); log . info ( customer . toString ()); log . info ( \"\" ); // fetch customers by last name log . info ( \"Customer found with findByLastName('Bauer'):\" ); log . info ( \"--------------------------------------------\" ); repository . findByLastName ( \"Bauer\" ). forEach ( bauer -> { log . info ( bauer . toString ()); }); // for (Customer bauer : repository.findByLastName(\"Bauer\")) { // log.info(bauer.toString()); // } log . info ( \"\" ); }; } \u5c06\u4e00\u4e2a\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a CommandLineRunner \u7684\u51fd\u6570\uff0c\u52a0\u4e0a @Bean \u7684\u6ce8\u89e3\u3002 \u8be5\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a lamda\uff0c\u56e0\u6b64\u5176\u4e2d\u7684\u5185\u5bb9\u4f1a\u5728\u7a0b\u5e8f\u542f\u52a8\u65f6\u81ea\u52a8\u6267\u884c\u3002 \u901a\u8fc7\u6ce8\u5165\u6211\u4eec\u5b9a\u4e49\u7684\u63a5\u53e3\u5230\u51fd\u6570\u53c2\u6570\uff0c\u6211\u4eec\u80fd\u65b9\u4fbf\u7684\u8fdb\u884c\u6570\u636e\u5e93\u64cd\u4f5c\u3002 \u9996\u5148\u6267\u884c\u7ee7\u627f\u6765\u7684 save \u65b9\u6cd5\u521b\u5efa\u6570\u636e\uff0cfindAll \u65b9\u6cd5\u67e5\u8be2\u5168\u90e8\u6570\u636e\u3002 \u7136\u540e\u6267\u884c\u81ea\u5b9a\u4e49\u7684\u67e5\u8be2\u65b9\u6cd5\u3002 \u53c2\u8003 Accessing Data with JPA Accessing JPA Data with REST","title":"\u5165\u95e8"},{"location":"database/jpa/#spring-data-jpa","text":"","title":"Spring Data JPA"},{"location":"database/jpa/#_1","text":"<dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-data-jpa </artifactId> </dependency> <dependency> <groupId> com.h2database </groupId> <artifactId> h2 </artifactId> <scope> runtime </scope> </dependency> \u8fd9\u91cc\u9009\u7528\u7684\u6570\u636e\u5e93\u4e3a H2 \u6570\u636e\u5e93\uff0c\u5b83\u65e0\u9700\u914d\u7f6e\u8fde\u63a5\uff0c\u505c\u6b62\u540e\u6570\u636e\u81ea\u52a8\u6e05\u9664\uff0c\u5341\u5206\u4fbf\u4e8e\u6d4b\u8bd5\u73af\u5883\u3002","title":"\u6dfb\u52a0\u4f9d\u8d56"},{"location":"database/jpa/#_2","text":"import javax.persistence.Entity ; import javax.persistence.GeneratedValue ; import javax.persistence.GenerationType ; import javax.persistence.Id ; @Entity public class Customer { @Id @GeneratedValue ( strategy = GenerationType . AUTO ) private Long id ; private String firstName ; private String lastName ; protected Customer () { } public Customer ( String firstName , String lastName ) { this . firstName = firstName ; this . lastName = lastName ; } @Override public String toString () { return String . format ( \"Customer[id=%d, firstName='%s', lastName='%s']\" , id , firstName , lastName ); } public Long getId () { return id ; } public String getFirstName () { return firstName ; } public String getLastName () { return lastName ; } } \u9996\u5148\u5b9a\u4e49\u8868\u793a\u6570\u636e\u7c7b\u7684\u5c5e\u6027\uff0c\u4ee5\u53ca\u4e24\u4e2a\u6784\u9020\u5668\u3002 \u5176\u4e2d\u7a7a\u7684\u6784\u9020\u5668\u662f\u7ed9 JPA \u7528\u7684\uff0c\u6211\u4eec\u4e0d\u8be5\u76f4\u63a5\u8c03\u7528\uff0c\u9700\u8981\u53c2\u6570\u7684\u6784\u9020\u5668\u662f\u7ed9\u6211\u4eec\u7528\u4e8e\u521b\u5efa\u5b58\u5230\u6570\u636e\u5e93\u91cc\u7684\u5b9e\u4f53\u3002 \u51a0\u4ee5 @Entity \u6ce8\u89e3\u7684\u7c7b\u8868\u660e\u5b83\u662f\u4e00\u4e2a JPA \u5b9e\u4f53\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 @Table \u6ce8\u89e3\u6765\u6307\u5b9a\u5bf9\u5e94\u7684\u8868\u540d\uff0c\u8fd9\u91cc\u672a\u6307\u5b9a\u5219\u9ed8\u8ba4\u53d6\u7c7b\u540d\u3002 id \u8fd9\u4e2a\u5c5e\u6027\u88ab\u52a0\u4e0a @Id \u6ce8\u89e3\uff0c\u5219\u8868\u793a\u8be5\u5c5e\u6027\u5bf9\u5e94\u4e8e\u6570\u636e\u8868\u4e2d\u7684\u4e3b\u952e\u3002 @GeneratedValue \u6ce8\u89e3\u5219\u8868\u793a\u6211\u4eec\u65e0\u9700\u624b\u52a8\u8bbe\u7f6e\u8be5\u5b57\u6bb5\u7684\u503c\uff0c\u800c\u662f\u4ea4\u7531 JPA \u6765\u751f\u6210\u3002 \u8fd9\u91cc\u751f\u6210\u7684\u7b56\u7565\u4e3a\u81ea\u589e\u3002 \u7f6e\u4e8e\u5176\u4ed6\u4e24\u4e2a\u5c5e\u6027\uff0c\u6ca1\u6709\u88ab\u52a0\u4e0a\u4efb\u4f55\u6ce8\u89e3\uff0c\u5219\u5bf9\u5e94\u4e8e\u6570\u636e\u8868\u4e2d\u7684\u4e00\u4e2a\u666e\u901a\u5b57\u6bb5\u3002 \u5982\u679c\u4f60\u4f7f\u7528 mysql \u6216 postgresql \u7684\u8bdd\uff0c\u9700\u8981\u6ce8\u610f\u8868\u540d\u6216\u8005\u5b57\u6bb5\u540d\u5e76\u975e\u4fdd\u7559\u5173\u952e\u5b57\u3002 \u6bd4\u5982 user \u3002","title":"\u5b9a\u4e49\u5b9e\u4f53\u7c7b"},{"location":"database/jpa/#crud","text":"Spring Data JPA \u6700\u5177\u7279\u8272\u7684\u529f\u80fd\u5c31\u662f\u5b83\u80fd\u591f\u5728\u8fd0\u884c\u65f6\u6309\u7167\u6211\u4eec\u7684\u63a5\u53e3\u5b9a\u4e49\u6765\u81ea\u52a8\u751f\u6210\u5b9e\u9645\u7684\u65b9\u6cd5\u3002 import org.springframework.data.repository.CrudRepository ; import java.util.List ; public interface CustomerRepository extends CrudRepository < Customer , Long > { List < Customer > findByLastName ( String lastName ); Customer findById ( long id ); } \u8ba9 CustomerRepository \u7ee7\u627f\u81ea CrudRepository \u63a5\u53e3\uff0c\u4f7f\u7528\u8303\u578b\u53c2\u6570\u6307\u5b9a\u5b9e\u4f53\u7c7b\u53ca\u5176\u4e3b\u952e\u7c7b\u578b\u3002 \u901a\u8fc7\u7ee7\u627f\uff0c\u6211\u4eec\u9ed8\u8ba4\u7684\u5c31\u5177\u6709\u4e86\u4e00\u4e9b\u589e\u5220\u6539\u67e5\u7684\u51fd\u6570\uff0c\u4f60\u4e5f\u53ef\u4ee5\u7ee7\u627f\u5176\u4ed6\u63a5\u53e3\u83b7\u5f97\u66f4\u4e30\u5bcc\u7684\u9884\u7f6e\u529f\u80fd\u3002 \u7136\u540e\u901a\u8fc7\u5b9a\u4e49\u65b9\u6cd5\u7684\u540d\u79f0\uff0c\u6211\u4eec\u5c31\u80fd\u62e5\u6709\u5bf9\u5e94\u529f\u80fd\u7684\u6570\u636e\u5e93\u64cd\u4f5c\u3002 \u7b49\u5230\u7a0b\u5e8f\u542f\u52a8\u65f6\uff0cSpring Data JPA \u4f1a\u4e3a\u6211\u4eec\u521b\u5efa\u6b64\u63a5\u53e3\u7684\u4e00\u4e2a\u5b9e\u73b0\uff0c\u65e0\u9700\u6211\u4eec\u518d\u5199\u989d\u5916\u7684\u4ee3\u7801\u3002","title":"\u5b9a\u4e49 CRUD \u7684\u63a5\u53e3"},{"location":"database/jpa/#_3","text":"import lombok.extern.log4j.Log4j2 ; import org.springframework.boot.CommandLineRunner ; import org.springframework.context.annotation.Bean ; @Log4j2 @Bean public CommandLineRunner demo ( CustomerRepository repository ) { return ( args ) -> { // save a few customers repository . save ( new Customer ( \"Jack\" , \"Bauer\" )); repository . save ( new Customer ( \"Chloe\" , \"O'Brian\" )); repository . save ( new Customer ( \"Kim\" , \"Bauer\" )); repository . save ( new Customer ( \"David\" , \"Palmer\" )); repository . save ( new Customer ( \"Michelle\" , \"Dessler\" )); // fetch all customers log . info ( \"Customers found with findAll():\" ); log . info ( \"-------------------------------\" ); for ( Customer customer : repository . findAll ()) { log . info ( customer . toString ()); } log . info ( \"\" ); // fetch an individual customer by ID Customer customer = repository . findById ( 1L ); log . info ( \"Customer found with findById(1L):\" ); log . info ( \"--------------------------------\" ); log . info ( customer . toString ()); log . info ( \"\" ); // fetch customers by last name log . info ( \"Customer found with findByLastName('Bauer'):\" ); log . info ( \"--------------------------------------------\" ); repository . findByLastName ( \"Bauer\" ). forEach ( bauer -> { log . info ( bauer . toString ()); }); // for (Customer bauer : repository.findByLastName(\"Bauer\")) { // log.info(bauer.toString()); // } log . info ( \"\" ); }; } \u5c06\u4e00\u4e2a\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a CommandLineRunner \u7684\u51fd\u6570\uff0c\u52a0\u4e0a @Bean \u7684\u6ce8\u89e3\u3002 \u8be5\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a lamda\uff0c\u56e0\u6b64\u5176\u4e2d\u7684\u5185\u5bb9\u4f1a\u5728\u7a0b\u5e8f\u542f\u52a8\u65f6\u81ea\u52a8\u6267\u884c\u3002 \u901a\u8fc7\u6ce8\u5165\u6211\u4eec\u5b9a\u4e49\u7684\u63a5\u53e3\u5230\u51fd\u6570\u53c2\u6570\uff0c\u6211\u4eec\u80fd\u65b9\u4fbf\u7684\u8fdb\u884c\u6570\u636e\u5e93\u64cd\u4f5c\u3002 \u9996\u5148\u6267\u884c\u7ee7\u627f\u6765\u7684 save \u65b9\u6cd5\u521b\u5efa\u6570\u636e\uff0cfindAll \u65b9\u6cd5\u67e5\u8be2\u5168\u90e8\u6570\u636e\u3002 \u7136\u540e\u6267\u884c\u81ea\u5b9a\u4e49\u7684\u67e5\u8be2\u65b9\u6cd5\u3002","title":"\u6d4b\u8bd5\u529f\u80fd"},{"location":"database/jpa/#_4","text":"Accessing Data with JPA Accessing JPA Data with REST","title":"\u53c2\u8003"},{"location":"req-res/body/","text":"\u8bf7\u6c42\u4f53 \u5f53\u4f60\u9700\u8981\u5c06\u6570\u636e\u4ece\u5ba2\u6237\u7aef\uff08\u4f8b\u5982\u6d4f\u89c8\u5668\uff09\u53d1\u9001\u7ed9 API \u65f6\uff0c\u4f60\u5c06\u5176\u4f5c\u4e3a\u300c\u8bf7\u6c42\u4f53\u300d\u53d1\u9001\u3002 \u8bf7\u6c42\u4f53\u662f\u5ba2\u6237\u7aef\u53d1\u9001\u7ed9 API \u7684\u6570\u636e\u3002\u54cd\u5e94\u4f53\u662f API \u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u7684\u6570\u636e\u3002 \u4f60\u7684 API \u51e0\u4e4e\u603b\u662f\u8981\u53d1\u9001\u54cd\u5e94\u4f53\u3002\u4f46\u662f\u5ba2\u6237\u7aef\u5e76\u4e0d\u603b\u662f\u9700\u8981\u53d1\u9001\u8bf7\u6c42\u4f53\u3002 \u4f60\u4e0d\u80fd\u4f7f\u7528 GET \u64cd\u4f5c\uff08HTTP \u65b9\u6cd5\uff09\u53d1\u9001\u8bf7\u6c42\u4f53\u3002 \u8981\u53d1\u9001\u6570\u636e\uff0c\u4f60\u5fc5\u987b\u4f7f\u7528\u4e0b\u5217\u65b9\u6cd5\u4e4b\u4e00\uff1aPOST\uff08\u8f83\u5e38\u89c1\uff09\u3001PUT\u3001DELETE \u6216 PATCH\u3002 \u6765\u81ea FastAPI \u6587\u6863 \u9996\u5148\u5b9a\u4e49\u8868\u793a\u6570\u636e\u6a21\u578b\u7684\u7c7b\uff0c\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 record\u3002 \u6821\u9a8c\u6ce8\u89e3\u4e5f\u662f\u9002\u7528\u7684\u3002 record Item ( @NotBlank String name , String description , @NotNull Float price , Float tax ) { } \u4f8b\u5982\uff0c\u4e0a\u9762\u7684\u6a21\u578b\u58f0\u660e\u4e86\u4e00\u4e2a\u8fd9\u6837\u7684 JSON\u300cobject\u300d\uff1a { \"name\" : \"Foo\" , \"description\" : \"An optional description\" , \"price\" : 45.2 , \"tax\" : 3.5 } \u7531\u4e8e description \u548c tax \u662f\u53ef\u9009\u7684\uff0c\u4e0b\u9762\u7684 JSON\u300cobject\u300d\u4e5f\u5c06\u662f\u6709\u6548\u7684\uff1a { \"name\" : \"Foo\" , \"price\" : 45.2 } \u4f7f\u7528 @RequestBody \u5c06\u51fd\u6570\u53c2\u6570\u6307\u5b9a\u4e3a\u4ece\u8bf7\u6c42\u4f53\u4e2d\u83b7\u53d6\u3002 @PostMapping ( \"/items/\" ) public Item createItem ( @Validated @RequestBody Item item ) { return item ; } \u4f60\u53ef\u4ee5\u540c\u65f6\u58f0\u660e\u8def\u5f84\u53c2\u6570\uff0c\u67e5\u8be2\u53c2\u6570\uff0c\u8bf7\u6c42\u4f53\u7b49\uff0c\u53ea\u9700\u8981\u51a0\u4ee5\u4e0d\u540c\u7684\u6ce8\u89e3\u5373\u53ef\u3002 \u8bf7\u6ce8\u610f\uff0c\u4f60\u53ea\u80fd\u5c06\u4e00\u4e2a\u51fd\u6570\u53c2\u6570\u52a0\u4e0a RequestBody \u7684\u6ce8\u89e3\uff0c\u5982\u679c\u4f60\u6709\u591a\u4e2a\u7c7b\u5171\u540c\u7ec4\u6210\u7684 json \u7ed3\u6784\uff0c \u8bf7\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5305\u88c5\u7c7b\u6765\u6d88\u8d39\u8bf7\u6c42\u4f53\u7684\u5185\u5bb9\u3002 \u5173\u4e8e\u4e0d\u652f\u6301\u7684\u539f\u56e0\uff0c\u8bf7\u53c2\u8003 Spring MVC controller with multiple @RequestBody","title":"\u8bf7\u6c42\u4f53"},{"location":"req-res/body/#_1","text":"\u5f53\u4f60\u9700\u8981\u5c06\u6570\u636e\u4ece\u5ba2\u6237\u7aef\uff08\u4f8b\u5982\u6d4f\u89c8\u5668\uff09\u53d1\u9001\u7ed9 API \u65f6\uff0c\u4f60\u5c06\u5176\u4f5c\u4e3a\u300c\u8bf7\u6c42\u4f53\u300d\u53d1\u9001\u3002 \u8bf7\u6c42\u4f53\u662f\u5ba2\u6237\u7aef\u53d1\u9001\u7ed9 API \u7684\u6570\u636e\u3002\u54cd\u5e94\u4f53\u662f API \u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u7684\u6570\u636e\u3002 \u4f60\u7684 API \u51e0\u4e4e\u603b\u662f\u8981\u53d1\u9001\u54cd\u5e94\u4f53\u3002\u4f46\u662f\u5ba2\u6237\u7aef\u5e76\u4e0d\u603b\u662f\u9700\u8981\u53d1\u9001\u8bf7\u6c42\u4f53\u3002 \u4f60\u4e0d\u80fd\u4f7f\u7528 GET \u64cd\u4f5c\uff08HTTP \u65b9\u6cd5\uff09\u53d1\u9001\u8bf7\u6c42\u4f53\u3002 \u8981\u53d1\u9001\u6570\u636e\uff0c\u4f60\u5fc5\u987b\u4f7f\u7528\u4e0b\u5217\u65b9\u6cd5\u4e4b\u4e00\uff1aPOST\uff08\u8f83\u5e38\u89c1\uff09\u3001PUT\u3001DELETE \u6216 PATCH\u3002 \u6765\u81ea FastAPI \u6587\u6863 \u9996\u5148\u5b9a\u4e49\u8868\u793a\u6570\u636e\u6a21\u578b\u7684\u7c7b\uff0c\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 record\u3002 \u6821\u9a8c\u6ce8\u89e3\u4e5f\u662f\u9002\u7528\u7684\u3002 record Item ( @NotBlank String name , String description , @NotNull Float price , Float tax ) { } \u4f8b\u5982\uff0c\u4e0a\u9762\u7684\u6a21\u578b\u58f0\u660e\u4e86\u4e00\u4e2a\u8fd9\u6837\u7684 JSON\u300cobject\u300d\uff1a { \"name\" : \"Foo\" , \"description\" : \"An optional description\" , \"price\" : 45.2 , \"tax\" : 3.5 } \u7531\u4e8e description \u548c tax \u662f\u53ef\u9009\u7684\uff0c\u4e0b\u9762\u7684 JSON\u300cobject\u300d\u4e5f\u5c06\u662f\u6709\u6548\u7684\uff1a { \"name\" : \"Foo\" , \"price\" : 45.2 } \u4f7f\u7528 @RequestBody \u5c06\u51fd\u6570\u53c2\u6570\u6307\u5b9a\u4e3a\u4ece\u8bf7\u6c42\u4f53\u4e2d\u83b7\u53d6\u3002 @PostMapping ( \"/items/\" ) public Item createItem ( @Validated @RequestBody Item item ) { return item ; } \u4f60\u53ef\u4ee5\u540c\u65f6\u58f0\u660e\u8def\u5f84\u53c2\u6570\uff0c\u67e5\u8be2\u53c2\u6570\uff0c\u8bf7\u6c42\u4f53\u7b49\uff0c\u53ea\u9700\u8981\u51a0\u4ee5\u4e0d\u540c\u7684\u6ce8\u89e3\u5373\u53ef\u3002 \u8bf7\u6ce8\u610f\uff0c\u4f60\u53ea\u80fd\u5c06\u4e00\u4e2a\u51fd\u6570\u53c2\u6570\u52a0\u4e0a RequestBody \u7684\u6ce8\u89e3\uff0c\u5982\u679c\u4f60\u6709\u591a\u4e2a\u7c7b\u5171\u540c\u7ec4\u6210\u7684 json \u7ed3\u6784\uff0c \u8bf7\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5305\u88c5\u7c7b\u6765\u6d88\u8d39\u8bf7\u6c42\u4f53\u7684\u5185\u5bb9\u3002 \u5173\u4e8e\u4e0d\u652f\u6301\u7684\u539f\u56e0\uff0c\u8bf7\u53c2\u8003 Spring MVC controller with multiple @RequestBody","title":"\u8bf7\u6c42\u4f53"},{"location":"req-res/cookie/","text":"Cookie \u548c Header \u524d\u9762\u6211\u4eec\u63d0\u5230\uff0cSpring web \u662f\u57fa\u4e8e Java \u7684 Servlet \u7684\u5c01\u88c5\uff0c\u6240\u4ee5\u6211\u4eec\u603b\u662f\u53ef\u4ee5\u7ed9\u51fd\u6570\u6ce8\u5165 HttpServletRequest \u548c HttpServletResponse \u5bf9\u8c61\u3002 \u5b83\u4eec\u5305\u542b\u4e86\u6211\u4eec\u9700\u8981\u8fdb\u884c\u7684 Cookie \u548c Header \u7684\u64cd\u4f5c\u3002 \u53c8\u6216\u8005\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 @CookieValue \u548c @RequestHeader \u6ce8\u89e3\u6765\u83b7\u53d6\u67d0\u4e00\u7279\u5b9a\u7684 Cookie \u548c Header\u3002 \u5f53\u9700\u8981\u7ed9\u5ba2\u6237\u7aef\u8bbe\u7f6e\u5185\u5bb9\u65f6\uff0c\u53ef\u4ee5\u8fd4\u56de ResponseEntity \u5bf9\u8c61\u3002 \u5b83\u4ee3\u8868\u4e86 HTTP \u54cd\u5e94\uff0c\u5141\u8bb8\u6211\u4eec\u8bbe\u7f6e\u72b6\u6001\u7801\uff0cCookie\uff0cHeader\uff0cBody \u7b49\u3002 @GetMapping ( \"/cookie-header\" ) public ResponseEntity < Object > cookieAndHeader ( @CookieValue ( value = \"username\" , defaultValue = \"Hyoban\" ) String username , @RequestHeader HttpHeaders headers ) { HttpHeaders responseHeaders = new HttpHeaders (); responseHeaders . set ( \"my-header\" , \"my-header-value\" ); return ResponseEntity . ok () . headers ( responseHeaders ) . body ( Map . of ( \"username\" , username , \"header\" , headers )); } \u4e5f\u5c31\u662f\u8bf4\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u4e0e\u5e95\u5c42\u7684 Servlet \u6253\u4ea4\u9053\u3002 \u53c2\u8003 How to use cookies in Spring Boot How to Read HTTP Headers in Spring REST Controllers","title":"Cookie \u548c Header"},{"location":"req-res/cookie/#cookie-header","text":"\u524d\u9762\u6211\u4eec\u63d0\u5230\uff0cSpring web \u662f\u57fa\u4e8e Java \u7684 Servlet \u7684\u5c01\u88c5\uff0c\u6240\u4ee5\u6211\u4eec\u603b\u662f\u53ef\u4ee5\u7ed9\u51fd\u6570\u6ce8\u5165 HttpServletRequest \u548c HttpServletResponse \u5bf9\u8c61\u3002 \u5b83\u4eec\u5305\u542b\u4e86\u6211\u4eec\u9700\u8981\u8fdb\u884c\u7684 Cookie \u548c Header \u7684\u64cd\u4f5c\u3002 \u53c8\u6216\u8005\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 @CookieValue \u548c @RequestHeader \u6ce8\u89e3\u6765\u83b7\u53d6\u67d0\u4e00\u7279\u5b9a\u7684 Cookie \u548c Header\u3002 \u5f53\u9700\u8981\u7ed9\u5ba2\u6237\u7aef\u8bbe\u7f6e\u5185\u5bb9\u65f6\uff0c\u53ef\u4ee5\u8fd4\u56de ResponseEntity \u5bf9\u8c61\u3002 \u5b83\u4ee3\u8868\u4e86 HTTP \u54cd\u5e94\uff0c\u5141\u8bb8\u6211\u4eec\u8bbe\u7f6e\u72b6\u6001\u7801\uff0cCookie\uff0cHeader\uff0cBody \u7b49\u3002 @GetMapping ( \"/cookie-header\" ) public ResponseEntity < Object > cookieAndHeader ( @CookieValue ( value = \"username\" , defaultValue = \"Hyoban\" ) String username , @RequestHeader HttpHeaders headers ) { HttpHeaders responseHeaders = new HttpHeaders (); responseHeaders . set ( \"my-header\" , \"my-header-value\" ); return ResponseEntity . ok () . headers ( responseHeaders ) . body ( Map . of ( \"username\" , username , \"header\" , headers )); } \u4e5f\u5c31\u662f\u8bf4\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u4e0e\u5e95\u5c42\u7684 Servlet \u6253\u4ea4\u9053\u3002","title":"Cookie \u548c Header"},{"location":"req-res/cookie/#_1","text":"How to use cookies in Spring Boot How to Read HTTP Headers in Spring REST Controllers","title":"\u53c2\u8003"},{"location":"req-res/path-params/","text":"\u8def\u5f84\u53c2\u6570 \u57fa\u7840\u4f7f\u7528 @GetMapping ( \"/items/{itemId}\" ) public Map < String , String > readItem ( @PathVariable String itemId ) { return Map . of ( \"item_id\" , itemId ); } \u5728\u8def\u5f84\u4e2d\u4f7f\u7528\u82b1\u62ec\u53f7\u8868\u793a\u8def\u5f84\u53c2\u6570\u7684\u5360\u4f4d\uff0c\u7136\u540e\u5728\u65b9\u6cd5\u4e0a\u58f0\u660e\u5bf9\u5e94\u7684\u53c2\u6570\uff0c\u5f53\u7136\u53ef\u4ee5\u4f7f\u7528 IDEA \u7684\u63d0\u793a\u81ea\u52a8\u751f\u6210\u3002 \u4f60\u53ef\u968f\u610f\u6307\u5b9a\u540c\u6837\u80fd\u5339\u914d\u8be5\u8def\u7531\u7684\u9759\u6001\u89c4\u5219\uff0cSpring \u4f1a\u81ea\u52a8\u4f18\u5148\u5339\u914d\u3002 FastAPI \u7684\u8def\u5f84\u64cd\u4f5c\u662f\u6309\u7167\u987a\u5e8f\u6765\u7684\u3002 \u8fd9\u91cc\u7684\u8def\u5f84\u53c2\u6570\u4e0d\u80fd\u4e3a\u8def\u5f84\u5b57\u7b26\u4e32\uff0c\u8bf7\u4f7f\u7528\u67e5\u8be2\u53c2\u6570\uff0c\u6216\u8005\u662f\u7ed3\u5408\u6b63\u5219\u4ece request \u4e2d\u63d0\u53d6\u3002 \u53c2\u8003 Spring 3 RequestMapping: Get path value \u53c2\u6570\u6821\u9a8c \u4f60\u53ef\u4ee5\u901a\u8fc7\u5c06 String \u6539\u4e3a Integer \u6216\u662f\u5176\u4ed6\u7c7b\u578b\u6765\u8fdb\u884c\u7c7b\u578b\u6821\u9a8c\u3002 \u5728\u4fee\u6539\u5b8c\u7c7b\u578b\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8fd4\u56de\u7684 JSON \u6570\u636e\u4e2d\uff0citem_id \u4e3a\u6570\u5b57\u800c\u975e\u5b57\u7b26\u4e32\u3002 \u6b64\u540e\uff0c\u5982\u679c\u4f60\u4f20\u5165\u4e0d\u5bf9\u5e94\u7684\u8def\u5f84\u53c2\u6570\u7c7b\u578b\uff0c\u5c31\u4f1a\u770b\u5230\u4e00\u4e2a\u6e05\u6670\u7684\u62a5\u9519\u3002 @Validated \u548c\u6821\u9a8c\u76f8\u5173\u7684\u6ce8\u89e3\u5e76\u4e0d\u9002\u7528\u4e8e\u8def\u5f84\u53c2\u6570\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u7b49\u5176\u4ed6\u65b9\u5f0f\u6765\u8fdb\u884c\u6821\u9a8c\u3002 \u8bf7\u53c2\u8003 How to validate Spring MVC @PathVariable values? \u4e2d\u6821\u9a8c\u7684\u65b9\u6cd5\u3002 \u6b64\u5916\uff0c\u91cc\u9762\u6709\u4e00\u4e2a\u56de\u7b54\u6307\u51fa\uff0c\u8def\u5f84\u53c2\u6570\u5e94\u8be5\u59cb\u7ec8\u4e0d\u88ab\u6821\u9a8c\uff0c\u4f60\u9700\u8981\u4f9d\u636e\u5176\u5c55\u793a\u7ed9\u7528\u6237\u53ef\u9605\u8bfb\u7684\u4fe1\u606f\u3002 \u9884\u8bbe\u503c \u4f60\u53ef\u4ee5\u5c06\u7c7b\u578b\u6307\u5b9a\u4e3a\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b\uff0c\u4ee5\u8bbe\u5b9a\u53ef\u9009\u7684\u9884\u7f6e\u9009\u9879\u3002 \u8fd9\u4e9b\u4fe1\u606f\u5728\u4ea4\u4e92\u5f0f\u7684\u6587\u6863\u4e2d\u540c\u6837\u53ef\u4ee5\u5c55\u793a\u3002 enum ModelName { alexnet , resnet , lenet , } @GetMapping ( \"/models/{modelName}\" ) public Map < String , Object > getModel ( @PathVariable ModelName modelName ) { return Map . of ( \"model_name\" , modelName . name ()); }","title":"\u8def\u5f84\u53c2\u6570"},{"location":"req-res/path-params/#_1","text":"","title":"\u8def\u5f84\u53c2\u6570"},{"location":"req-res/path-params/#_2","text":"@GetMapping ( \"/items/{itemId}\" ) public Map < String , String > readItem ( @PathVariable String itemId ) { return Map . of ( \"item_id\" , itemId ); } \u5728\u8def\u5f84\u4e2d\u4f7f\u7528\u82b1\u62ec\u53f7\u8868\u793a\u8def\u5f84\u53c2\u6570\u7684\u5360\u4f4d\uff0c\u7136\u540e\u5728\u65b9\u6cd5\u4e0a\u58f0\u660e\u5bf9\u5e94\u7684\u53c2\u6570\uff0c\u5f53\u7136\u53ef\u4ee5\u4f7f\u7528 IDEA \u7684\u63d0\u793a\u81ea\u52a8\u751f\u6210\u3002 \u4f60\u53ef\u968f\u610f\u6307\u5b9a\u540c\u6837\u80fd\u5339\u914d\u8be5\u8def\u7531\u7684\u9759\u6001\u89c4\u5219\uff0cSpring \u4f1a\u81ea\u52a8\u4f18\u5148\u5339\u914d\u3002 FastAPI \u7684\u8def\u5f84\u64cd\u4f5c\u662f\u6309\u7167\u987a\u5e8f\u6765\u7684\u3002 \u8fd9\u91cc\u7684\u8def\u5f84\u53c2\u6570\u4e0d\u80fd\u4e3a\u8def\u5f84\u5b57\u7b26\u4e32\uff0c\u8bf7\u4f7f\u7528\u67e5\u8be2\u53c2\u6570\uff0c\u6216\u8005\u662f\u7ed3\u5408\u6b63\u5219\u4ece request \u4e2d\u63d0\u53d6\u3002 \u53c2\u8003 Spring 3 RequestMapping: Get path value","title":"\u57fa\u7840\u4f7f\u7528"},{"location":"req-res/path-params/#_3","text":"\u4f60\u53ef\u4ee5\u901a\u8fc7\u5c06 String \u6539\u4e3a Integer \u6216\u662f\u5176\u4ed6\u7c7b\u578b\u6765\u8fdb\u884c\u7c7b\u578b\u6821\u9a8c\u3002 \u5728\u4fee\u6539\u5b8c\u7c7b\u578b\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8fd4\u56de\u7684 JSON \u6570\u636e\u4e2d\uff0citem_id \u4e3a\u6570\u5b57\u800c\u975e\u5b57\u7b26\u4e32\u3002 \u6b64\u540e\uff0c\u5982\u679c\u4f60\u4f20\u5165\u4e0d\u5bf9\u5e94\u7684\u8def\u5f84\u53c2\u6570\u7c7b\u578b\uff0c\u5c31\u4f1a\u770b\u5230\u4e00\u4e2a\u6e05\u6670\u7684\u62a5\u9519\u3002 @Validated \u548c\u6821\u9a8c\u76f8\u5173\u7684\u6ce8\u89e3\u5e76\u4e0d\u9002\u7528\u4e8e\u8def\u5f84\u53c2\u6570\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u7b49\u5176\u4ed6\u65b9\u5f0f\u6765\u8fdb\u884c\u6821\u9a8c\u3002 \u8bf7\u53c2\u8003 How to validate Spring MVC @PathVariable values? \u4e2d\u6821\u9a8c\u7684\u65b9\u6cd5\u3002 \u6b64\u5916\uff0c\u91cc\u9762\u6709\u4e00\u4e2a\u56de\u7b54\u6307\u51fa\uff0c\u8def\u5f84\u53c2\u6570\u5e94\u8be5\u59cb\u7ec8\u4e0d\u88ab\u6821\u9a8c\uff0c\u4f60\u9700\u8981\u4f9d\u636e\u5176\u5c55\u793a\u7ed9\u7528\u6237\u53ef\u9605\u8bfb\u7684\u4fe1\u606f\u3002","title":"\u53c2\u6570\u6821\u9a8c"},{"location":"req-res/path-params/#_4","text":"\u4f60\u53ef\u4ee5\u5c06\u7c7b\u578b\u6307\u5b9a\u4e3a\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b\uff0c\u4ee5\u8bbe\u5b9a\u53ef\u9009\u7684\u9884\u7f6e\u9009\u9879\u3002 \u8fd9\u4e9b\u4fe1\u606f\u5728\u4ea4\u4e92\u5f0f\u7684\u6587\u6863\u4e2d\u540c\u6837\u53ef\u4ee5\u5c55\u793a\u3002 enum ModelName { alexnet , resnet , lenet , } @GetMapping ( \"/models/{modelName}\" ) public Map < String , Object > getModel ( @PathVariable ModelName modelName ) { return Map . of ( \"model_name\" , modelName . name ()); }","title":"\u9884\u8bbe\u503c"},{"location":"req-res/query-params/","text":"\u67e5\u8be2\u53c2\u6570 private final List < Map < String , String >> fakeItemsDb = List . of ( Map . of ( \"item_name\" , \"Foo\" ), Map . of ( \"item_name\" , \"Bar\" ), Map . of ( \"item_name\" , \"Baz\" ) ); @GetMapping ( \"/items\" ) public List < Map < String , String >> readItem ( @RequestParam ( defaultValue = \"0\" ) Integer skip , @RequestParam ( defaultValue = \"10\" ) Integer limit ) { return fakeItemsDb . subList ( skip , skip + limit > fakeItemsDb . size () ? fakeItemsDb . size () : limit ); } \u4f7f\u7528 @RequestParam \u6ce8\u89e3\u6765\u5c06\u51fd\u6570\u53c2\u6570\u6307\u5b9a\u4e3a\u67e5\u8be2\u53c2\u6570\u3002 \u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u53ef\u4ee5\u5339\u914d\u7684 URL \u4e3a http://127.0.0.1:8000/items/?skip=0&limit=10\u3002 \u67e5\u8be2\u53c2\u6570\u5e94\u5f53\u662f\u53ef\u9009\u7684\uff0c\u6307\u5b9a defaultValue \u662f\u4e00\u4e2a\u597d\u4e60\u60ef\u3002 \u5982\u679c\u4f60\u660e\u786e\u9700\u8981\u5fc5\u586b\u7684\u67e5\u8be2\u53c2\u6570\uff0c\u53ef\u4ee5\u53bb\u9664\u5b83\uff0c\u8be5\u6ce8\u89e3\u9ed8\u8ba4\u914d\u7f6e required \u5c5e\u6027\u4e3a true\u3002 \u6709\u53ef\u80fd\u4f60\u5e0c\u671b\u67e5\u8be2\u53c2\u6570\u7684\u547d\u540d\u4e3a kebab-case \u98ce\u683c\uff0c\u4f46\u8fd9\u548c Java \u53d8\u91cf\u7684 PascalCase \u4e0d\u4e00\u81f4\u3002 \u6240\u4ee5\u4f60\u9700\u8981\u901a\u8fc7\u8be5\u6ce8\u89e3\u7684 name \u53c2\u6570\u6765\u7ed9\u8be5\u67e5\u8be2\u53c2\u6570\u63d0\u4f9b\u522b\u540d\u3002 Bool \u7c7b\u578b\u53c2\u6570 \u524d\u9762\u4e00\u8282\u4e2d\u63d0\u5230\u7684\u901a\u8fc7\u6307\u5b9a\u53c2\u6570\u7c7b\u578b\u6765\u8fdb\u884c\u6821\u9a8c\uff0c\u540c\u6837\u4e5f\u9002\u7528\u4e8e\u6b64\u5904\u3002 \u5f97\u76ca\u4e8e Spring Web \u5bf9\u67e5\u8be2\u53c2\u6570\u7684\u81ea\u52a8\u8f6c\u6362\uff0c\u6307\u5b9a\u4e3a Boolean \u7c7b\u578b\u7684\u53c2\u6570\u53ef\u4ee5\u88ab\u81ea\u52a8\u8f6c\u6362\u3002 @RequestParam ( defaultValue = \"true\" ) Boolean isShort \u67e5\u8be2\u53c2\u6570\u5217\u8868 \u4f60\u8fd8\u53ef\u4ee5\u5c06\u67e5\u8be2\u53c2\u6570\u7684\u7c7b\u578b\u8bbe\u7f6e\u4e3a List\uff0c\u8fd9\u6837\u4f60\u53ef\u4ee5\u4f20\u9012\u591a\u4e2a\u67e5\u8be2\u53c2\u6570\u3002 @RequestParam ( defaultValue = \"foo,bar\" ) List < String > q \u6bd4\u5982\u4e0a\u9762\u53ef\u4ee5\u5339\u914d\u7684\u5730\u5740\u4e3a http://localhost:8000/items/?q=foo&q=bar \u3002 \u4f60\u540c\u6837\u53ef\u4ee5\u4e3a\u5176\u5236\u5b9a\u9ed8\u8ba4\u503c\uff0c\u4ee5\u9017\u53f7\u5206\u9694 List \u4e2d\u7684\u6bcf\u4e2a\u503c\u3002","title":"\u67e5\u8be2\u53c2\u6570"},{"location":"req-res/query-params/#_1","text":"private final List < Map < String , String >> fakeItemsDb = List . of ( Map . of ( \"item_name\" , \"Foo\" ), Map . of ( \"item_name\" , \"Bar\" ), Map . of ( \"item_name\" , \"Baz\" ) ); @GetMapping ( \"/items\" ) public List < Map < String , String >> readItem ( @RequestParam ( defaultValue = \"0\" ) Integer skip , @RequestParam ( defaultValue = \"10\" ) Integer limit ) { return fakeItemsDb . subList ( skip , skip + limit > fakeItemsDb . size () ? fakeItemsDb . size () : limit ); } \u4f7f\u7528 @RequestParam \u6ce8\u89e3\u6765\u5c06\u51fd\u6570\u53c2\u6570\u6307\u5b9a\u4e3a\u67e5\u8be2\u53c2\u6570\u3002 \u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u53ef\u4ee5\u5339\u914d\u7684 URL \u4e3a http://127.0.0.1:8000/items/?skip=0&limit=10\u3002 \u67e5\u8be2\u53c2\u6570\u5e94\u5f53\u662f\u53ef\u9009\u7684\uff0c\u6307\u5b9a defaultValue \u662f\u4e00\u4e2a\u597d\u4e60\u60ef\u3002 \u5982\u679c\u4f60\u660e\u786e\u9700\u8981\u5fc5\u586b\u7684\u67e5\u8be2\u53c2\u6570\uff0c\u53ef\u4ee5\u53bb\u9664\u5b83\uff0c\u8be5\u6ce8\u89e3\u9ed8\u8ba4\u914d\u7f6e required \u5c5e\u6027\u4e3a true\u3002 \u6709\u53ef\u80fd\u4f60\u5e0c\u671b\u67e5\u8be2\u53c2\u6570\u7684\u547d\u540d\u4e3a kebab-case \u98ce\u683c\uff0c\u4f46\u8fd9\u548c Java \u53d8\u91cf\u7684 PascalCase \u4e0d\u4e00\u81f4\u3002 \u6240\u4ee5\u4f60\u9700\u8981\u901a\u8fc7\u8be5\u6ce8\u89e3\u7684 name \u53c2\u6570\u6765\u7ed9\u8be5\u67e5\u8be2\u53c2\u6570\u63d0\u4f9b\u522b\u540d\u3002","title":"\u67e5\u8be2\u53c2\u6570"},{"location":"req-res/query-params/#bool","text":"\u524d\u9762\u4e00\u8282\u4e2d\u63d0\u5230\u7684\u901a\u8fc7\u6307\u5b9a\u53c2\u6570\u7c7b\u578b\u6765\u8fdb\u884c\u6821\u9a8c\uff0c\u540c\u6837\u4e5f\u9002\u7528\u4e8e\u6b64\u5904\u3002 \u5f97\u76ca\u4e8e Spring Web \u5bf9\u67e5\u8be2\u53c2\u6570\u7684\u81ea\u52a8\u8f6c\u6362\uff0c\u6307\u5b9a\u4e3a Boolean \u7c7b\u578b\u7684\u53c2\u6570\u53ef\u4ee5\u88ab\u81ea\u52a8\u8f6c\u6362\u3002 @RequestParam ( defaultValue = \"true\" ) Boolean isShort","title":"Bool \u7c7b\u578b\u53c2\u6570"},{"location":"req-res/query-params/#_2","text":"\u4f60\u8fd8\u53ef\u4ee5\u5c06\u67e5\u8be2\u53c2\u6570\u7684\u7c7b\u578b\u8bbe\u7f6e\u4e3a List\uff0c\u8fd9\u6837\u4f60\u53ef\u4ee5\u4f20\u9012\u591a\u4e2a\u67e5\u8be2\u53c2\u6570\u3002 @RequestParam ( defaultValue = \"foo,bar\" ) List < String > q \u6bd4\u5982\u4e0a\u9762\u53ef\u4ee5\u5339\u914d\u7684\u5730\u5740\u4e3a http://localhost:8000/items/?q=foo&q=bar \u3002 \u4f60\u540c\u6837\u53ef\u4ee5\u4e3a\u5176\u5236\u5b9a\u9ed8\u8ba4\u503c\uff0c\u4ee5\u9017\u53f7\u5206\u9694 List \u4e2d\u7684\u6bcf\u4e2a\u503c\u3002","title":"\u67e5\u8be2\u53c2\u6570\u5217\u8868"},{"location":"swagger/schema-extra/","text":"\u6a21\u5f0f\u7684\u989d\u5916\u4fe1\u606f \u524d\u9762\u7684\u6559\u7a0b\u4e2d\uff0c\u5f97\u76ca\u4e8e springdoc \u4f1a\u626b\u63cf\u53c2\u6570\u6821\u9a8c\u6ce8\u89e3\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u5df2\u7ecf\u80fd\u591f\u5728\u6587\u6863\u4e2d\u770b\u5230\u53c2\u6570\u7684\u4e00\u4e9b\u76f8\u5173\u4fe1\u606f\u3002 \u4f46\u662f\u5982\u679c\u5e0c\u671b\u5c06\u5176\u4f5c\u4e3a\u63a5\u53e3\u6587\u6863\u7684\u8bdd\uff0c\u6211\u4eec\u5e94\u8be5\u8fd8\u9700\u8981\u624b\u52a8\u8865\u5145\u4e00\u4e9b\u4fe1\u606f\u3002 \u63a5\u53e3\u4fe1\u606f \u901a\u8fc7 @Operation \u6ce8\u89e3\u4e3a\u63a5\u53e3\u6dfb\u52a0\u989d\u5916\u4fe1\u606f\u3002 \u4e3b\u8981\u7684\u4e00\u822c\u662f summary \u548c description \u9009\u9879\uff0c\u662f\u4e3a\u63a5\u53e3\u63d0\u4f9b\u8bf4\u660e\u7b80\u77ed\u548c\u8be6\u7ec6\u7684\u4fe1\u606f\u3002 \u800c\u5982\u679c\u4f60\u5e0c\u671b\u9690\u85cf\u67d0\u4e2a\u63a5\u53e3\uff0c\u8ba9\u5176\u4e0d\u51fa\u73b0\u5728\u6587\u6863\u4e2d\uff0c\u5219\u53ef\u4ee5\u7ed9\u63a5\u53e3\u52a0\u4e0a @Hidden \u6ce8\u89e3\u3002 \u8bf7\u6c42\u4f53\u4fe1\u606f record Item ( @Schema ( example = \"Foo\" ) @NotBlank String name , @Schema ( example = \"A very nice Item\" ) String description , @Schema ( example = \"35.4\" ) @NotNull Float price , @Schema ( example = \"3.2\" ) Float tax ) { } \u4f60\u53ef\u4ee5\u901a\u8fc7 @Schema \u6ce8\u89e3\u4e3a\u8bf7\u6c42\u4f53\u4e2d\u7684\u6210\u5458\u8865\u5145\u4fe1\u606f\u3002 \u6700\u5e38\u7528\u7684\u4e00\u822c\u662f\u7ed9\u51fa\u4e00\u4e2a\u793a\u4f8b\u6216\u662f\u7b80\u4ecb\u3002 \u63a5\u53e3\u53c2\u6570\u4fe1\u606f @Parameter ( description = \"Query string for the items to search in the database that have a good match\" , deprecated = true , examples = { @ExampleObject ( name = \"foo\" , value = \"2\" ), @ExampleObject ( name = \"bar\" , value = \"4\" )} ) \u4f60\u53ef\u4ee5\u501f\u52a9 @Parameter \u6ce8\u89e3\u6765\u7ed9 API \u6587\u6863\u4e2d\u7684\u67e5\u8be2\u53c2\u6570\u6216\u662f\u8def\u5f84\u53c2\u6570\u63d0\u4f9b\u989d\u5916\u7684\u4fe1\u606f\u3002 \u6bd4\u5982\u5bf9\u53c2\u6570\u8fdb\u884c\u63cf\u8ff0\u6216\u8005\u63d0\u4f9b\u4e00\u4e2a\u793a\u4f8b\uff0c\u53c8\u6216\u662f\u6807\u8bb0\u5b83\u4e3a\u4e00\u4e2a\u5e9f\u5f03\u7684\u63a5\u53e3\uff0c\u518d\u5c31\u662f\u4e0d\u5c06\u8be5\u53c2\u6570\u4fe1\u606f\u66b4\u9732\u5728\u6587\u6863\u4e2d\u3002 \u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7 examples \u6765\u63d0\u4f9b\u591a\u4e2a\u793a\u4f8b\uff0c\u5b83\u63a5\u6536\u4e00\u4e2a @ExampleObject \u6570\u7ec4\uff0c\u4f60\u9700\u8981\u63d0\u4f9b\u793a\u4f8b\u7684\u540d\u79f0\u548c\u503c\u3002","title":"\u6a21\u5f0f\u7684\u989d\u5916\u4fe1\u606f"},{"location":"swagger/schema-extra/#_1","text":"\u524d\u9762\u7684\u6559\u7a0b\u4e2d\uff0c\u5f97\u76ca\u4e8e springdoc \u4f1a\u626b\u63cf\u53c2\u6570\u6821\u9a8c\u6ce8\u89e3\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u5df2\u7ecf\u80fd\u591f\u5728\u6587\u6863\u4e2d\u770b\u5230\u53c2\u6570\u7684\u4e00\u4e9b\u76f8\u5173\u4fe1\u606f\u3002 \u4f46\u662f\u5982\u679c\u5e0c\u671b\u5c06\u5176\u4f5c\u4e3a\u63a5\u53e3\u6587\u6863\u7684\u8bdd\uff0c\u6211\u4eec\u5e94\u8be5\u8fd8\u9700\u8981\u624b\u52a8\u8865\u5145\u4e00\u4e9b\u4fe1\u606f\u3002","title":"\u6a21\u5f0f\u7684\u989d\u5916\u4fe1\u606f"},{"location":"swagger/schema-extra/#_2","text":"\u901a\u8fc7 @Operation \u6ce8\u89e3\u4e3a\u63a5\u53e3\u6dfb\u52a0\u989d\u5916\u4fe1\u606f\u3002 \u4e3b\u8981\u7684\u4e00\u822c\u662f summary \u548c description \u9009\u9879\uff0c\u662f\u4e3a\u63a5\u53e3\u63d0\u4f9b\u8bf4\u660e\u7b80\u77ed\u548c\u8be6\u7ec6\u7684\u4fe1\u606f\u3002 \u800c\u5982\u679c\u4f60\u5e0c\u671b\u9690\u85cf\u67d0\u4e2a\u63a5\u53e3\uff0c\u8ba9\u5176\u4e0d\u51fa\u73b0\u5728\u6587\u6863\u4e2d\uff0c\u5219\u53ef\u4ee5\u7ed9\u63a5\u53e3\u52a0\u4e0a @Hidden \u6ce8\u89e3\u3002","title":"\u63a5\u53e3\u4fe1\u606f"},{"location":"swagger/schema-extra/#_3","text":"record Item ( @Schema ( example = \"Foo\" ) @NotBlank String name , @Schema ( example = \"A very nice Item\" ) String description , @Schema ( example = \"35.4\" ) @NotNull Float price , @Schema ( example = \"3.2\" ) Float tax ) { } \u4f60\u53ef\u4ee5\u901a\u8fc7 @Schema \u6ce8\u89e3\u4e3a\u8bf7\u6c42\u4f53\u4e2d\u7684\u6210\u5458\u8865\u5145\u4fe1\u606f\u3002 \u6700\u5e38\u7528\u7684\u4e00\u822c\u662f\u7ed9\u51fa\u4e00\u4e2a\u793a\u4f8b\u6216\u662f\u7b80\u4ecb\u3002","title":"\u8bf7\u6c42\u4f53\u4fe1\u606f"},{"location":"swagger/schema-extra/#_4","text":"@Parameter ( description = \"Query string for the items to search in the database that have a good match\" , deprecated = true , examples = { @ExampleObject ( name = \"foo\" , value = \"2\" ), @ExampleObject ( name = \"bar\" , value = \"4\" )} ) \u4f60\u53ef\u4ee5\u501f\u52a9 @Parameter \u6ce8\u89e3\u6765\u7ed9 API \u6587\u6863\u4e2d\u7684\u67e5\u8be2\u53c2\u6570\u6216\u662f\u8def\u5f84\u53c2\u6570\u63d0\u4f9b\u989d\u5916\u7684\u4fe1\u606f\u3002 \u6bd4\u5982\u5bf9\u53c2\u6570\u8fdb\u884c\u63cf\u8ff0\u6216\u8005\u63d0\u4f9b\u4e00\u4e2a\u793a\u4f8b\uff0c\u53c8\u6216\u662f\u6807\u8bb0\u5b83\u4e3a\u4e00\u4e2a\u5e9f\u5f03\u7684\u63a5\u53e3\uff0c\u518d\u5c31\u662f\u4e0d\u5c06\u8be5\u53c2\u6570\u4fe1\u606f\u66b4\u9732\u5728\u6587\u6863\u4e2d\u3002 \u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7 examples \u6765\u63d0\u4f9b\u591a\u4e2a\u793a\u4f8b\uff0c\u5b83\u63a5\u6536\u4e00\u4e2a @ExampleObject \u6570\u7ec4\uff0c\u4f60\u9700\u8981\u63d0\u4f9b\u793a\u4f8b\u7684\u540d\u79f0\u548c\u503c\u3002","title":"\u63a5\u53e3\u53c2\u6570\u4fe1\u606f"}]}